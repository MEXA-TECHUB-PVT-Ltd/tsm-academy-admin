{"version":3,"file":"static/js/206.b1a74324.chunk.js","mappings":"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","sources":["pages/userAdd/SamplePage.js"],"sourcesContent":["// material-ui\nimport {\n  Typography, Grid, Button,\n  FormHelperText,\n  OutlinedInput,\n  Stack,\n  Tooltip,\n  MenuItem,\n  FormControl,\n  Select\n\n} from '@mui/material';\nimport { useEffect, useState } from 'react';\nimport {\n  ArrowLeftOutlined\n} from '@ant-design/icons';\nimport { ClipLoader } from \"react-spinners\";\nimport toastAlert from 'components/ToastAlert/index';\nimport { useNavigate } from 'react-router-dom';\nimport {  get, post } from 'Urls/api';\n\n\n\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\n// ==============================|| SAMPLE PAGE ||============================== //\n\nconst UserAdd = () => {\n  const navigate = useNavigate();\n  const [programs, setPrograms] = useState([]);\n  const [packages, setPackages] = useState([]);\n\n  const [selectedProgram, setSelectedProgram] = useState('')\n  const [selectedPackage, setSelectedPackage] = useState([])\n\n  const fetchAllprograms = async () => {\n    try {\n\n      const apiData = await get('program/get'); // Specify the endpoint you want to call\n      console.log(\"ALL PROGRAMS\")\n\n      console.log(apiData)\n\n      if (apiData.error) {\n      } else {\n        // setProductsLength(apiData.totalPages)\n        setPrograms(apiData.result.reverse())\n        setSelectedProgram(apiData.result[0].program_id)\n        // localStorage.setItem(\"@AdminSession\", JSON.stringify({ user: apiData.data }));\n        // navigate('/')\n      }\n    } catch (error) {\n\n    }\n  }\n  const fetchProducts = async () => {\n\n    try {\n      const apiData = await get('package/getAllPackages'); // Specify the endpoint you want to call\n      console.log(apiData)\n      if (apiData.error) {\n        console.log(\"error true\")\n        // setLoader(false)\n\n      } else {\n        console.log(apiData.result)\n\n        console.log(\"COURSSES\")\n        setPackages(apiData.result)\n      }\n    } catch (error) {\n\n    }\n\n  }\n  useEffect(() => {\n    fetchAllprograms()\n    fetchProducts()\n  }, []);\n  return (\n    <>\n      <Grid container spacing={2}>\n\n\n        <Grid item xs={12} md={12} style={{ position: 'relative' }}>\n\n          <Grid container spacing={2}>\n            <Grid item xs={12} md={12} style={{\n              display: 'flex',\n              flexDirection: 'row',\n              justifyContent: 'left',\n              marginBottom: '2%'\n            }}>\n              <Tooltip title=\"Back\">\n\n\n                <Button\n                  onClick={() => {\n                    navigate(`/users`)\n                  }\n                  }\n                  className='poppinsRegularBold'\n                  sx={{\n                    // width: '100px',\n                    paddingInline: '10px',\n                    display: \"block\",\n                    color: \"#03356b\",\n                    backgroundColor: \"none\",\n                    fontSize: '16px',\n                    fontWeight: 600,\n                    borderRadius: '50px',\n                    textTransform: 'capitalize',\n                    transition: 'background-color 0.3s, color 0.3s', // Add transition properties\n                    transitionDelay: '0.3s', // Add transition delay for hover\n                    marginRight: '10px',\n                    // border: '1px solid #03356b',\n                    '&:hover': {\n                      backgroundColor: \"#03356b\",\n                      color: 'white', // Change text color to blue on hover\n                    },\n                  }} >\n                  <ArrowLeftOutlined />\n                </Button>\n              </Tooltip>\n              <Typography variant=\"h3\" style={{ fontWeight: 700, }}>Add User</Typography>\n            </Grid>\n            <Grid item xs={12} md={12} >\n              {/* <OrdersTable /> */}\n              <Formik\n                initialValues={{\n\n                  user_name: \"\",\n                  email: \"\",\n                  submit: null\n                }}\n                validationSchema={Yup.object().shape({\n                  user_name: Yup.string().required('Name is required'),\n                  email: Yup.string().required('Email is required'),\n\n\n                })}\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting, resetForm }) => {\n                  try {\n                    console.log(values)\n                    setSubmitting(true);\n                    console.log(\"pricingPlansA[0]?.price_plan\")\n                    console.log(selectedProgram)\n                    console.log(selectedPackage)\n                    for(let i=0;i<selectedPackage.length;i++){\n                      const postData = {\n                        user_name: values.user_name,\n                        email: values.email,\n                        program_id: selectedProgram,\n                        package_id: selectedPackage[i],\n                      };\n                      try {\n                        // craete product \n                        const apiData = await post('user/register', postData); // Specify the endpoint you want to call\n                        console.log(\"ADD User \")\n  \n                        console.log(apiData)\n                        if (apiData.error) {\n                          console.log(\"error true\")\n                          toastAlert(\"error\", apiData.message)\n                          setSubmitting(false);\n  \n                        } else {\n                          setStatus({ success: false });\n                          setSubmitting(false);\n                          setTimeout(() => {\n                            navigate('/users')\n                          }, 1000)\n  \n                        }\n                      } catch (error) {\n                        toastAlert(\"error\", \"Something Went Wrong\")\n                        setStatus({ success: false });\n                        setSubmitting(false);\n  \n                      }\n                    }\n                    toastAlert(\"success\",\"Added Successfully\")\n                 \n                    setStatus({ success: false });\n                    setSubmitting(false);\n                  } catch (err) {\n                    setStatus({ success: false });\n                    setErrors({ submit: err.message });\n                    setSubmitting(false);\n                  }\n                }}\n              >\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n                  <form noValidate onSubmit={handleSubmit}>\n                    <Grid container spacing={3}>\n\n                      <Grid item xs={12} md={12} >\n                        <Grid container spacing={2} style={{ border: '1px solid lightGray', borderRadius: '10px', backgroundColor: 'white' }}>\n                          <Grid item xs={12} md={12}>\n                            <Grid container spacing={2}>\n                              <Grid item xs={12} md={4} >\n\n                              </Grid>\n                              <Grid item xs={12} md={4} style={{ padding: '20px' }}>\n                                <Stack spacing={1}>\n                                  <Typography variant=\"h5\">Name</Typography>\n                                  <OutlinedInput\n                                    id=\"email-login\"\n                                    type=\"text\"\n                                    value={values.user_name}\n                                    name=\"user_name\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    fullWidth\n                                    error={Boolean(touched.user_name && errors.user_name)}\n                                  />\n                                  {touched.user_name && errors.user_name && (\n                                    <FormHelperText error id=\"standard-weight-helper-text-email-login\">\n                                      {errors.user_name}\n                                    </FormHelperText>\n                                  )}\n                                </Stack>\n                                <Stack spacing={1}>\n                                  <Typography variant=\"h5\">Email</Typography>\n                                  <OutlinedInput\n                                    id=\"email-login\"\n                                    type=\"text\"\n                                    value={values.email}\n                                    name=\"email\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    fullWidth\n                                    error={Boolean(touched.email && errors.email)}\n                                  />\n                                  {touched.email && errors.email && (\n                                    <FormHelperText error id=\"standard-weight-helper-text-email-login\">\n                                      {errors.email}\n                                    </FormHelperText>\n                                  )}\n                                </Stack>\n                                <Stack spacing={1}>\n                                  <Typography variant=\"h5\">Selected Program</Typography>\n                                  <FormControl fullWidth>\n                                    <Select\n                                      labelId=\"demo-simple-select-label\"\n                                      id=\"demo-simple-select\"\n                                      value={selectedProgram}\n                                      onChange={async (e) => {\n                                        console.log(e.target.value)\n                                        // try {\n                                        setSelectedProgram(e.target.value)\n\n                                      }\n                                      }\n                                    >\n                                      {programs.map((program, index) =>\n                                        <MenuItem key={index} value={program.program_id}>{program.title}</MenuItem>\n                                      )}\n\n                                    </Select>\n                                  </FormControl>\n                                </Stack>\n                                <Stack spacing={1}>\n                                  <Typography variant=\"h5\">Selected Courses to Enroll</Typography>\n                                  <FormControl fullWidth>\n                                    <Select\n                                      labelId=\"demo-simple-select-label\"\n                                      id=\"demo-simple-select\"\n                                      value={selectedPackage}\n                                      multiple\n                                      onChange={(e) => {\n                                        setSelectedPackage(e.target.value)\n                                        console.log(selectedPackage)\n\n\n                                      }}\n                                      renderValue={(selected) => selected.map(value => packages.find(packageJ => packageJ.package_id === value).package_name).join(', ')}\n                                    >\n                                      {packages.map((packageJ, index) =>\n                                        <MenuItem key={index} value={packageJ.package_id} \n                                        disabled={selectedPackage.includes(packageJ.package_id)}\n                                        >{packageJ.package_name}</MenuItem>\n                                      )}\n\n                                    </Select>\n                                  </FormControl>\n                                  {selectedPackage?.length === 0 && (\n                                  <span style={{color:'red',fontSize:'12px'}}> Select Courses to Enroll </span>\n                                  )\n                                    }\n\n                                 \n                                </Stack>\n\n                                <Stack spacing={1} mt={2} display=\"flex\" justifyContent=\"center\"\n                                >\n                                  <Button disabled={isSubmitting}\n                                    startIcon={\n                                      isSubmitting ?\n                                        <ClipLoader\n                                          color={\"#fff\"}\n                                          loading={isSubmitting}\n                                          size={20}\n                                        />\n                                        : null\n                                    }\n                                    type=\"submit\"\n                                    disableElevation\n                                    variant=\"contained\"\n                                    size=\"medium\"\n                                    style={{\n                                      width: '20%',\n                                      fontWeight: 700,\n                                      color: 'white',\n                                      boxShadow: ' 0px 2px 30px -15px rgba(94,94,107,0.67)',\n                                    }} color=\"primary\">\n                                    Save\n                                  </Button>\n                                </Stack>\n                              </Grid>\n\n                            </Grid>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                      {errors.submit && (\n                        <Grid item xs={12}>\n                          <FormHelperText error>{errors.submit}</FormHelperText>\n                        </Grid>\n\n                      )}\n\n                    </Grid>\n                  </form>\n                )}\n              </Formik>\n            </Grid>\n          </Grid>\n        </Grid>\n\n\n      </Grid>\n\n    </>\n  )\n};\n\nexport default UserAdd;\n"],"names":["navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","programs","setPrograms","_useState3","_useState4","packages","setPackages","_useState5","_useState6","selectedProgram","setSelectedProgram","_useState7","_useState8","selectedPackage","setSelectedPackage","fetchAllprograms","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","apiData","wrap","_context","prev","next","get","sent","console","log","error","result","reverse","program_id","t0","stop","apply","arguments","fetchProducts","_ref2","_callee2","_context2","useEffect","_jsx","_Fragment","children","Grid","container","spacing","item","xs","md","style","position","_jsxs","display","flexDirection","justifyContent","marginBottom","Tooltip","title","Button","onClick","className","sx","paddingInline","color","backgroundColor","fontSize","fontWeight","borderRadius","textTransform","transition","transitionDelay","marginRight","ArrowLeftOutlined","Typography","variant","Formik","initialValues","user_name","email","submit","validationSchema","Yup","shape","required","onSubmit","_ref4","_callee3","values","_ref3","setErrors","setStatus","setSubmitting","i","postData","_context3","resetForm","length","package_id","post","toastAlert","message","success","setTimeout","t1","_x","_x2","_ref5","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","border","padding","Stack","OutlinedInput","id","type","value","name","onBlur","onChange","fullWidth","Boolean","FormHelperText","FormControl","Select","labelId","_ref6","_callee4","e","_context4","target","_x3","map","program","index","MenuItem","multiple","renderValue","selected","find","packageJ","package_name","join","disabled","includes","mt","startIcon","ClipLoader","loading","size","disableElevation","width","boxShadow"],"sourceRoot":""}
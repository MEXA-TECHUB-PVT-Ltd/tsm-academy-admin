{"version":3,"file":"static/js/34.648ae7db.chunk.js","mappings":"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","sources":["components/cards/statistics/AnalyticEcommerce.js","pages/videosData/OrdersTable.js","pages/videosData/SamplePage.js","../node_modules/@ant-design/icons-svg/es/asn/CloseOutlined.js","../node_modules/@ant-design/icons/es/icons/CloseOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/PaperClipOutlined.js","../node_modules/@ant-design/icons/es/icons/PaperClipOutlined.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\n// material-ui\nimport { Box, Chip, Grid, Stack, Typography } from '@mui/material';\n\n// project import\nimport MainCard from 'components/MainCard';\n\n// assets\nimport { RiseOutlined, FallOutlined } from '@ant-design/icons';\n\n// ==============================|| STATISTICS - ECOMMERCE CARD  ||============================== //\n\nconst AnalyticEcommerce = ({ color, title, count, percentage, isLoss, extra }) => (\n  <MainCard contentSX={{ p: 2.25 }}>\n    <Stack spacing={0.5}>\n      <Typography variant=\"h6\" color=\"textSecondary\">\n        {title}\n      </Typography>\n      <Grid container alignItems=\"center\">\n        <Grid item>\n          <Typography variant=\"h4\" color=\"inherit\">\n            {count}\n          </Typography>\n        </Grid>\n        {percentage && (\n          <Grid item>\n            <Chip\n              variant=\"combined\"\n              color={color}\n             \n              label={`${percentage}%`}\n              sx={{ ml: 1.25, pl: 1 }}\n              size=\"small\"\n            />\n          </Grid>\n        )}\n      </Grid>\n    </Stack>\n    \n  </MainCard>\n);\n\nAnalyticEcommerce.propTypes = {\n  color: PropTypes.string,\n  title: PropTypes.string,\n  count: PropTypes.string,\n  percentage: PropTypes.number,\n  isLoss: PropTypes.bool,\n  extra: PropTypes.oneOfType([PropTypes.node, PropTypes.string])\n};\n\nAnalyticEcommerce.defaultProps = {\n  color: 'primary'\n};\n\nexport default AnalyticEcommerce;\n","import { useEffect, useRef, useState } from 'react';\n// material-ui\nimport {\n  Box, Menu, MenuItem,\n  FormHelperText,\n  InputLabel,\n  OutlinedInput,\n  Button,\n  Skeleton,\n  IconButton,\n  TablePagination,\n  Badge,\n  Divider,\n  Tooltip, Grid, Avatar, Stack, Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Typography\n} from '@mui/material';\nimport Dialog from '@mui/material/Dialog';\nimport AnimateButton from 'components/@extended/AnimateButton';\n\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport ClipLoader from 'react-spinners/ClipLoader';\nimport DialogTitle from '@mui/material/DialogTitle';\n// project import\nimport emptyImage from \"../../assets/images/icons8-empty-64.png\"\nimport { BASE_URL, get, post, postFormData } from 'Urls/api';\nimport {\n  EllipsisOutlined,\n  SaveOutlined,\n  PaperClipOutlined,\n  UploadOutlined,\n  CloseOutlined,\n\n\n} from '@ant-design/icons';\n\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useNavigate } from 'react-router-dom';\nimport toastAlert from 'components/ToastAlert/index';\nimport { formatDate } from 'utils/formatDate';\nimport { styled } from '@mui/material/styles';\n\n\n// ==============================|| ORDER TABLE ||============================== //\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  '& .MuiDialogContent-root': {\n    padding: theme.spacing(2),\n  },\n  '& .MuiDialogActions-root': {\n    padding: theme.spacing(1),\n  },\n}));\nexport default function OrderTable() {\n  const navigate = useNavigate();\n  const [products, setProducts] = useState([]);\n  const [productsLength, setProductsLength] = useState(0);\n\n  // get all products \n\n  const anchorRef = useRef(null);\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const open = Boolean(anchorEl);\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  // delete \n  // Del \n  const [opendel, setOpendel] = useState(false);\n\n  const handleClosedel = () => {\n    setOpendel(false);\n  };\n  // List \n\n\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const handleDelete = () => {\n    setAnchorEl(null)\n    setOpendel(true)\n  }\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index);\n  };\n  // Delete Product \n  const [loading, setLoading] = useState(false)\n  const DeleteProduct = async () => {\n    setLoading(true)\n    console.log(selectedIndex)\n    const postData = {\n      user_id: selectedIndex,\n      status: StatusOfUser === \"active\" ? \"inactive\" : \"active\"\n    }\n    const apiData = await post('user/updateUsername', postData); // Specify the endpoint you want to call\n    console.log(\"Update Status \")\n    console.log(apiData)\n\n    if (apiData.error) {\n      toastAlert(\"error\", apiData.message)\n      setLoading(false)\n\n    } else {\n      toastAlert(\"success\", apiData.message)\n      setOpendel(false);\n      setLoading(false)\n\n      fetchAllproducts()\n\n    }\n\n  }\n  // Pagination \n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const [loader, setLoader] = useState(true)\n\n  // Use effect \n  const fetchAllproducts = async () => {\n    try {\n      // const postData = {\n      //   rowsPerPage: rowsPerPage,\n      //   page: page\n      // }\n      const apiData = await get('package/getAllVideos'); // Specify the endpoint you want to call\n      console.log(\"ALL Videos\")\n      console.log(apiData)\n\n      if (apiData.error) {\n        setLoader(false)\n      } else {\n        setProductsLength(apiData.result.length)\n        setProducts(apiData.result)\n        setLoader(false)\n      }\n    } catch (error) {\n      setLoader(false)\n    }\n  }\n  // Edit \n  //  Select Image \n  const [productData, setProductData] = useState(null)\n  const fileInputRef = useRef(null);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [ImageFile, setImageFile] = useState(null);\n  const [openEdit, setOpenEdit] = useState(false)\n  const handleCloseEdit = () => {\n    setOpenEdit(false)\n  }\n\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      setImageFile(file)\n      const reader = new FileReader();\n      reader.onload = () => {\n        setSelectedImage(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n  const [StatusOfUser, setStatusOfUser] = useState('')\n  const handleButtonClick = () => {\n    fileInputRef.current.click();\n  };\n  useEffect(() => {\n    fetchAllproducts()\n  }, [page]);\n  return (\n    <Box>\n      {loader ? <>\n        <Grid container spacing={2} pt={10} >\n          {/* For variant=\"text\", adjust the height via font-size */}\n\n          <Grid item xs={12} md={12} >\n\n            <Skeleton variant=\"rectangular\" height={100} />\n\n          </Grid>\n          <Grid item xs={12} md={12} >\n\n            <Skeleton variant=\"rectangular\" height={100} />\n\n          </Grid>\n          <Grid item xs={12} md={12} >\n\n            <Skeleton variant=\"rectangular\" height={100} />\n\n          </Grid>\n\n        </Grid>\n      </> : <>\n        <Grid container spacing={2}>\n          <Grid item xs={12} md={12} align=\"right\">\n\n            <TableContainer\n              sx={{\n                width: '100%',\n                overflowX: 'auto',\n                position: 'relative',\n                display: 'block',\n                maxWidth: '100%',\n                '& td, & th': { whiteSpace: 'nowrap' }\n              }}\n            >\n              <Table\n                aria-labelledby=\"tableTitle\"\n                sx={{\n                  '& .MuiTableCell-root:first-of-type': {\n                    pl: 2\n                  },\n                  '& .MuiTableCell-root:last-of-type': {\n                    pr: 3\n                  }\n                }}\n              >\n                <TableHead>\n                  <TableRow>\n                    <TableCell align=\"left\">Name</TableCell>\n\n                    <TableCell align=\"center\">Description</TableCell>\n\n\n                    <TableCell align=\"center\">Link</TableCell>\n                    <TableCell align=\"center\">Created</TableCell>\n                    <TableCell align=\"right\"></TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {products.length === 0 ? <>\n                    <TableRow>\n                      <TableCell colSpan={6} align=\"center\">\n                        <Box style={{\n                          display: 'flex',\n                          justifyContent: 'center'\n                        }}>\n                          <Avatar variant=\"square\" src={emptyImage} alt=\"No Data\" style={{ width: '64px', height: 'auto', marginBlock: '2%' }} />\n                        </Box>\n                      </TableCell>\n\n                    </TableRow>\n                  </> :\n                    <>\n                      {products.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n                        <>\n                          <TableRow\n                            key={row?.product_id}\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                          >\n                            <TableCell component=\"th\" scope=\"row\" style={{ cursor: 'pointer' }} onClick={() => navigate(`/video_detail/${row.product_videos_id}`)}>\n                              <Grid container spacing={2}>\n                                <Grid item xs={12} md={3}>\n                                  <Avatar variant=\"square\"\n                                  src={`${BASE_URL}${row?.thumbnail}`}\n                                   style={{\n                                    backgroundColor: '#03356b',\n                                    textTransform: 'capitalize'\n                                  }}/>\n\n\n                                </Grid>\n                                <Grid item xs={12} md={9}>\n                                  <Typography variant=\"h5\" style={{ fontWeight: 200 }}>{row?.title}</Typography>\n                                  {/* <Typography variant=\"h6\" style={{ fontWeight: 200, color: 'gray' }}> Price :{row.package_price} PKR</Typography> */}\n                                </Grid>\n                              </Grid>\n                            </TableCell>\n                            <TableCell align=\"center\">\n                               <Typography \n                                  style={{\n                                    whiteSpace: 'nowrap',\n                                    overflow: 'hidden',\n                                    textOverflow: 'ellipsis',\n                                    maxWidth: '300px',\n                                    cursor: 'pointer'\n                                  }}\n                                  title={row?.description.length > 20 ? row?.description : null} // Set a title for the full name\n                                >\n                                  {row?.description}\n                                </Typography>\n  \n</TableCell>\n                            \n\n                            <TableCell align=\"center\">\n                            <Typography \n                                  style={{\n                                    whiteSpace: 'nowrap',\n                                    overflow: 'hidden',\n                                    textOverflow: 'ellipsis',\n                                    maxWidth: '300px',\n                                    cursor: 'pointer'\n                                  }}\n                                  title={row?.video_url.length > 20 ? row?.video_url : null} // Set a title for the full name\n                                >\n                                  {row?.video_url}\n                                </Typography></TableCell>\n                            <TableCell align=\"center\">{formatDate(row.created_at)}</TableCell>\n\n                            <TableCell align=\"center\">\n                              <Tooltip title=\"Action\">\n                                <EllipsisOutlined ref={anchorRef} style={{ fontSize: '30px', cursor: 'pointer' }} onClick={\n                                  (event) => {\n                                    setSelectedIndex(row.product_videos_id)\n                                    setAnchorEl(event.currentTarget);\n                                    setProductData(row)\n                                    setStatusOfUser(row.status)\n                                  }} />\n                              </Tooltip>\n                            </TableCell>\n                          </TableRow>\n\n\n                        </>\n                      ))}</>}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n          <Grid item xs={12} md={12} align=\"right\">\n            {/* <Pagination count={productsLength}\n              onChange={(event, page) =>\n                handleChangePage(page)}\n              variant=\"outlined\" color=\"primary\" /> */}\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25]}\n              component=\"div\"\n              count={products.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n\n          </Grid>\n        </Grid>\n\n        {/* <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={productsLength}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      /> */}\n        <Menu\n          id=\"basic-menu\"\n          anchorEl={anchorEl}\n          open={open}\n          onClose={handleClose}\n          MenuListProps={{\n            'aria-labelledby': 'basic-button',\n          }}\n          PaperProps={{\n            elevation: 0,\n            sx: {\n              overflow: 'visible',\n              boxShadow: '0px 2px 30px -15px rgba(94,94,107,0.67)',\n              mt: 1.5,\n\n            },\n          }}\n          transformOrigin={{ horizontal: 'right', vertical: 'top' }}\n          anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\n        >\n          <MenuItem onClick={() => navigate(`/video_detail/${selectedIndex}`)}>View Detail</MenuItem>\n          \n\n          {/* <MenuItem onClick={() => {\n            setOpenEdit(true)\n            // setAnchorEl(null)\n            // setOpendel(true)\n            // setStatusData('resolved')\n\n            //  navigate(`/subscribed_product_detail/${selectedIndex}`)\n\n          }\n          }>Edit Product</MenuItem>\n          <MenuItem style={{ color: 'red' }} onClick={() => handleDelete()}>Delete </MenuItem> */}\n        </Menu>\n\n        {/* delete Dialog  */}\n        <Dialog\n          open={opendel}\n          onClose={handleClosedel}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle sx={{ m: 0, p: 2, fontSize: '20px', fontWeight: 700 }} id=\"customized-dialog-title\">\n            Update Status\n          </DialogTitle>\n          <DialogContent>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Divider />\n              </Grid>\n              <Grid item xs={12}>\n                <DialogContentText id=\"alert-dialog-description\" style={{ fontSize: '15px', color: 'black' }}>\n                  Are you sure you want to  {\n                    StatusOfUser === \"active\" ? \"Block User\" : \"Unblock User\"\n                  }?\n                </DialogContentText>\n              </Grid>\n              <Grid item xs={12}>\n                <Divider />\n              </Grid>\n              <Grid item xs={12} align=\"right\">\n                <Button disableElevation onClick={handleClosedel} variant=\"outlined\" size=\"medium\" style={{ marginRight: '12px', fontWeight: 700, color: 'gray', boxShadow: ' 0px 2px 30px -15px rgba(94,94,107,0.67)' }} color=\"secondary\">\n                  No\n                </Button>\n                <Button disabled={loading} onClick={() => DeleteProduct()} disableElevation variant=\"contained\" size=\"medium\" style={{ fontWeight: 700, color: 'white', boxShadow: ' 0px 2px 30px -15px rgba(94,94,107,0.67)' }} color=\"error\">\n                  Yes\n                </Button>\n              </Grid>\n            </Grid>\n          </DialogContent>\n        </Dialog>\n        {/* Edit  */}\n        <BootstrapDialog\n          onClose={handleCloseEdit}\n          aria-labelledby=\"customized-dialog-title\"\n          open={openEdit}\n        >\n          <DialogTitle sx={{ m: 0, p: 2, fontSize: '25px', fontWeight: 700 }} id=\"customized-dialog-title\">\n            Edit Product\n          </DialogTitle>\n          <IconButton\n            aria-label=\"close\"\n            onClick={handleCloseEdit}\n            sx={{\n              position: 'absolute',\n              right: 8,\n              top: 8,\n              color: (theme) => theme.palette.grey[500],\n            }}\n          >\n            <CloseOutlined />\n          </IconButton>\n          <DialogContent dividers>\n            <Formik\n              initialValues={{\n                name: productData ? productData.product_name : '',\n                description: productData ? productData.description : '',\n                product_id_stripe: productData ? productData.product_id_stripe : '',\n                submit: null\n              }}\n              validationSchema={Yup.object().shape({\n                name: Yup.string().required('Name is required'),\n                description: Yup.string().required('Description is required'),\n                product_id_stripe: Yup.string().required('Stripe Product is required')\n              })}\n              onSubmit={async (values, { setErrors, setStatus, setSubmitting, resetForm }) => {\n                try {\n                  console.log(values)\n                  console.log(ImageFile)\n                  let ImageUrl;\n                  if (ImageFile === null || ImageFile === \"\") {\n                    toastAlert(\"error\", \"Image Is Required\")\n                  } else {\n                    const postDataImage = {\n                      image: ImageFile\n                    };\n                    ImageUrl = await postFormData(postDataImage); // Specify the endpoint you want to call\n                    console.log(ImageUrl)\n                  }\n                  setSubmitting(true);\n                  const postData = {\n                    product_id: productData.product_id,\n                    image: ImageUrl?.path,\n                    product_name: values.name,\n                    description: values.description,\n                    product_id_stripe: values.product_id_stripe\n                  };\n                  try {\n                    const apiData = await post('product/updateProduct', postData); // Specify the endpoint you want to call\n                    console.log(apiData)\n                    if (apiData.error) {\n                      console.log(\"error true\")\n                      toastAlert(\"error\", apiData.message)\n                      setSubmitting(false);\n\n                    } else {\n                      // localStorage.setItem(\"@AdminSession\", JSON.stringify({ user: apiData.data }));\n                      // navigate('/')\n                      // setOpen(false)\n                      toastAlert(\"success\", apiData.message)\n                      setImageFile('')\n                      setSelectedImage('')\n                      resetForm();\n                      setTimeout(() => {\n                        window.location.reload();\n                      }, 1000);\n\n                      setStatus({ success: false });\n                      setSubmitting(false);\n                    }\n                  } catch (error) {\n                    toastAlert(\"error\", \"Something Went Wrong\")\n                    // setNextloader(false)\n                    setStatus({ success: false });\n                    setSubmitting(false);\n                    // console.error('Error fetching data:', error);\n                    // setNextloader(false)\n\n                  }\n                  setStatus({ success: false });\n                  setSubmitting(false);\n                } catch (err) {\n                  setStatus({ success: false });\n                  setErrors({ submit: err.message });\n                  setSubmitting(false);\n                }\n              }}\n            >\n              {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n                <form noValidate onSubmit={handleSubmit}>\n                  <Grid container spacing={3}>\n                    <Grid item xs={12}>\n                      <Stack spacing={1}>\n                        <Typography variant=\"h5\">Product Name</Typography>\n                        <OutlinedInput\n                          id=\"email-login\"\n                          type=\"text\"\n                          value={values.name}\n                          name=\"name\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          placeholder=\"Enter Product Name\"\n                          fullWidth\n                          error={Boolean(touched.name && errors.name)}\n                        />\n                        {touched.name && errors.name && (\n                          <FormHelperText error id=\"standard-weight-helper-text-email-login\">\n                            {errors.name}\n                          </FormHelperText>\n                        )}\n                      </Stack>\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Stack spacing={1}>\n                        <Typography variant=\"h5\">Description</Typography>\n\n                        <InputLabel htmlFor=\"email-login\">Appears at checkout, on the customer portal, and in quotes.</InputLabel>\n                        <OutlinedInput\n                          id=\"description\"\n                          type=\"text\"\n                          value={values.description}\n                          name=\"description\"\n                          onBlur={handleBlur}\n                          onChange={handleChange}\n                          placeholder=\"Enter Product description\"\n                          fullWidth\n                          multiline\n                          rows={4}\n                          error={Boolean(touched.description && errors.description)}\n                        />\n                        {touched.description && errors.description && (\n                          <FormHelperText error id=\"standard-weight-helper-text-email-login\">\n                            {errors.description}\n                          </FormHelperText>\n                        )}\n                      </Stack>\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Stack spacing={1}>\n                        <Typography variant=\"h5\">Stripe Product Id</Typography>\n\n                        <InputLabel htmlFor=\"email-login\">This id should be get from stripe Products .</InputLabel>\n                        <Stack spacing={1} display=\"flex\" direction=\"row\">\n                          <OutlinedInput\n                            id=\"product_id_stripe\"\n                            type=\"text\"\n                            value={values.product_id_stripe}\n                            name=\"product_id_stripe\"\n                            onBlur={handleBlur}\n                            onChange={handleChange}\n                            placeholder=\"Enter Stripe Product Id\"\n                            fullWidth\n\n                            error={Boolean(touched.product_id_stripe && errors.product_id_stripe)}\n                          />\n\n                          <Button disableElevation variant=\"outlined\" onClick={() => window.open('https://dashboard.stripe.com/', '_blank')} startIcon={<PaperClipOutlined />} size=\"medium\" style={{ color: 'rgb(76 91 104)', fontWeight: 700, backgroundColor: 'white', border: '1px solid lightGray', boxShadow: ' 0px 2px 30px -15px rgba(94,94,107,0.67)' }} color=\"secondary\">\n                            Stripe\n                          </Button>\n                        </Stack>\n                        {touched.product_id_stripe && errors.product_id_stripe && (\n                          <FormHelperText error id=\"standard-weight-helper-text-email-login\">\n                            {errors.product_id_stripe}\n                          </FormHelperText>\n                        )}\n                      </Stack>\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Stack spacing={1}>\n                        <Typography variant=\"h5\">Image</Typography>\n\n                        <InputLabel htmlFor=\"email-login\">Appears at checkout. JPEG or PNG image smaller than 2 MB.</InputLabel>\n                        {selectedImage === '' || selectedImage === null ? <>\n                          <AnimateButton>\n                            <Button onClick={handleButtonClick} disableElevation variant=\"outlined\" startIcon={<UploadOutlined />} size=\"medium\" style={{ color: 'rgb(76 91 104)', fontWeight: 700, backgroundColor: 'white', border: '1px solid lightGray', boxShadow: ' 0px 2px 30px -15px rgba(94,94,107,0.67)' }} color=\"secondary\">\n                              Upload\n                            </Button>\n                          </AnimateButton>\n                        </> :\n                          <>\n                            <AnimateButton>\n                              <Button onClick={() => setSelectedImage('')} disableElevation variant=\"outlined\" size=\"medium\" style={{ color: 'rgb(76 91 104)', fontWeight: 700, backgroundColor: 'white', border: '1px solid lightGray', boxShadow: ' 0px 2px 30px -15px rgba(94,94,107,0.67)' }} color=\"secondary\">\n                                Cancel\n                              </Button>\n                            </AnimateButton>\n                            {selectedImage &&\n                              <Avatar src={selectedImage} alt=\"Selected\" style={{ width: '300px', height: 'auto', border: '1px solid lightGray', borderRadius: '10px' }} variant=\"square\" />\n                            }\n                          </>}\n\n                        <input\n                          type=\"file\"\n                          accept=\"image/*\"\n                          style={{ display: 'none' }}\n                          id=\"fileInput\"\n                          onChange={handleFileUpload}\n                          ref={fileInputRef}\n                        />\n\n\n                      </Stack>\n                    </Grid>\n\n                    {errors.submit && (\n                      <Grid item xs={12}>\n                        <FormHelperText error>{errors.submit}</FormHelperText>\n                      </Grid>\n\n                    )}\n                    <Grid item xs={12} >\n                      <Divider />\n                    </Grid>\n                    <Grid item xs={12} align=\"right\">\n\n                      <Button disabled={isSubmitting}\n                        startIcon={isSubmitting ? <ClipLoader color=\"white\" loading={isSubmitting} size={20} />\n                          : null\n                        }\n                        type=\"submit\"\n                        disableElevation variant=\"contained\"\n                        size=\"medium\" style={{ fontWeight: 700, color: 'white', boxShadow: ' 0px 2px 30px -15px rgba(94,94,107,0.67)' }} color=\"primary\">\n                        Update\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </form>\n              )}\n            </Formik>\n          </DialogContent>\n\n\n        </BootstrapDialog>\n      </>}\n    </Box>\n  );\n}\n","// material-ui\nimport {\n  Typography, Grid, Button, Box, IconButton,\n} from '@mui/material';\nimport { useEffect, useRef, useState } from 'react';\n// project import\nimport OrdersTable from './OrdersTable';\nimport AnimateButton from 'components/@extended/AnimateButton';\nimport {\n  PlusOutlined,\n} from '@ant-design/icons';\nimport toastAlert from 'components/ToastAlert/index';\nimport { useNavigate } from 'react-router-dom';\nimport { post, postFormData } from 'Urls/api';\n\n\n\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\n// ==============================|| SAMPLE PAGE ||============================== //\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { styled } from '@mui/material/styles';\nimport ExportCSV from 'utils/ExportCSV';\nimport AnalyticEcommerce from 'components/cards/statistics/AnalyticEcommerce';\nconst BootstrapDialog = styled(Dialog)(({ theme }) => ({\n  '& .MuiDialogContent-root': {\n    padding: theme.spacing(2),\n  },\n  '& .MuiDialogActions-root': {\n    padding: theme.spacing(1),\n  },\n}));\n\nconst VideosData = () => {\n  const [open, setOpen] = useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  //  Select Image \n  const fileInputRef = useRef(null);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [ImageFile, setImageFile] = useState(null);\n\n\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      setImageFile(file)\n      const reader = new FileReader();\n      reader.onload = () => {\n        setSelectedImage(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleButtonClick = () => {\n    fileInputRef.current.click();\n  };\n  const navigate = useNavigate();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n  const [products, setProducts] = useState([]);\n\n  const [total_users, setTotal_Users] = useState(0)\n  const [total_subscriptions, setTotal_Subscriptions] = useState(0)\n  const [monthly_subscriptions, setMonthly_Subscriptions] = useState(0)\n  const [yearly_subscriptions, setYearly_Subscriptions] = useState(0)\n\n  const [total_products, setTotal_Products] = useState(0)\n  const [total_open_tickets, setTotal_Open_tickets] = useState(0)\n\n  const fetchAllproducts = async () => {\n    try {\n\n      const apiData = await post('user/dashboardAdminCount'); // Specify the endpoint you want to call\n      console.log(\"ALL Dashboard Count\")\n\n      console.log(apiData)\n\n      if (apiData.error) {\n\n\n        // toastAlert(\"error\", apiData.message)\n\n\n        // setNextloader(false)\n      } else {\n        setTotal_Users(apiData.total_programs)\n        setTotal_Subscriptions(apiData.total_courses)\n        setTotal_Products(apiData.videos)\n        // setTotal_Open_tickets(apiData.monthly_subscription)\n        // setMonthly_Subscriptions(apiData.monthly_subscription)\n        // setYearly_Subscriptions(apiData.yearly_subscription)\n\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n\n    }\n  }\n  useEffect(() => {\n    fetchAllproducts()\n  }, []);\n  return (\n    <>\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={9} style={{ display: 'flex', justifyContent: 'space-between' }}>\n          <Typography variant=\"h3\" style={{ fontWeight: 700 }}>Course Videos</Typography>\n\n        </Grid>\n        <Grid item xs={12} md={3} style={{ display: 'flex', justifyContent: 'right' }}>\n\n\n          {/* <AnimateButton>\n              <Button disableElevation variant=\"outlined\" startIcon={<ExportOutlined />} size=\"medium\" style={{ marginLeft: '20px', color: 'rgb(76 91 104)', fontWeight: 700, backgroundColor: 'white', border: '1px solid lightGray', boxShadow: ' 0px 2px 30px -15px rgba(94,94,107,0.67)' }} color=\"secondary\">\n              <ExportCSV data={\n                  products.map((item) => {\n                    return {\n                      \"Product Name\": item?.product_name,\n                      \"Price\": item?.price,\n                      \"Description\": item?.description,\n                      \"Created At\": item?.created_at,\n                      \"Stripe Id\": item?.product_id_stripe,\n                    }\n                  })\n                } FileName=\"Subscribed Products\" />\n              </Button>\n            </AnimateButton> */}\n\n          <AnimateButton>\n            <Button\n              onClick={() => navigate('/videoAdd')}\n              disableElevation startIcon={<PlusOutlined />} size=\"medium\" color=\"primary\" variant=\"contained\">\n              Course Video\n            </Button>\n          </AnimateButton>\n        </Grid>\n        <Grid item xs={12} md={12}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6} md={4} lg={4}>\n              <AnalyticEcommerce title=\"Total Programs\" count={total_users} />\n            </Grid>\n            <Grid item xs={12} sm={6} md={4} lg={4}>\n              <AnalyticEcommerce title=\"Total Courses\" count={total_subscriptions} />\n            </Grid>\n            <Grid item xs={12} sm={6} md={4} lg={4}>\n              <AnalyticEcommerce title=\"Total Videos\" count={total_products} />\n            </Grid>\n\n          </Grid>\n          </Grid>\n\n        <Grid item xs={12} md={12}>\n          <OrdersTable />\n        </Grid>\n      \n      </Grid>\n\n    </>\n  )\n};\n\nexport default VideosData;\n","// This icon file is generated automatically.\nvar CloseOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M563.8 512l262.5-312.9c4.4-5.2.7-13.1-6.1-13.1h-79.8c-4.7 0-9.2 2.1-12.3 5.7L511.6 449.8 295.1 191.7c-3-3.6-7.5-5.7-12.3-5.7H203c-6.8 0-10.5 7.9-6.1 13.1L459.4 512 196.9 824.9A7.95 7.95 0 00203 838h79.8c4.7 0 9.2-2.1 12.3-5.7l216.5-258.1 216.5 258.1c3 3.6 7.5 5.7 12.3 5.7h79.8c6.8 0 10.5-7.9 6.1-13.1L563.8 512z\" } }] }, \"name\": \"close\", \"theme\": \"outlined\" };\nexport default CloseOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloseOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloseOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar CloseOutlined = function CloseOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CloseOutlinedSvg\n  }));\n};\nCloseOutlined.displayName = 'CloseOutlined';\nexport default /*#__PURE__*/React.forwardRef(CloseOutlined);","// This icon file is generated automatically.\nvar PaperClipOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M779.3 196.6c-94.2-94.2-247.6-94.2-341.7 0l-261 260.8c-1.7 1.7-2.6 4-2.6 6.4s.9 4.7 2.6 6.4l36.9 36.9a9 9 0 0012.7 0l261-260.8c32.4-32.4 75.5-50.2 121.3-50.2s88.9 17.8 121.2 50.2c32.4 32.4 50.2 75.5 50.2 121.2 0 45.8-17.8 88.8-50.2 121.2l-266 265.9-43.1 43.1c-40.3 40.3-105.8 40.3-146.1 0-19.5-19.5-30.2-45.4-30.2-73s10.7-53.5 30.2-73l263.9-263.8c6.7-6.6 15.5-10.3 24.9-10.3h.1c9.4 0 18.1 3.7 24.7 10.3 6.7 6.7 10.3 15.5 10.3 24.9 0 9.3-3.7 18.1-10.3 24.7L372.4 653c-1.7 1.7-2.6 4-2.6 6.4s.9 4.7 2.6 6.4l36.9 36.9a9 9 0 0012.7 0l215.6-215.6c19.9-19.9 30.8-46.3 30.8-74.4s-11-54.6-30.8-74.4c-41.1-41.1-107.9-41-149 0L463 364 224.8 602.1A172.22 172.22 0 00174 724.8c0 46.3 18.1 89.8 50.8 122.5 33.9 33.8 78.3 50.7 122.7 50.7 44.4 0 88.8-16.9 122.6-50.7l309.2-309C824.8 492.7 850 432 850 367.5c.1-64.6-25.1-125.3-70.7-170.9z\" } }] }, \"name\": \"paper-clip\", \"theme\": \"outlined\" };\nexport default PaperClipOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PaperClipOutlinedSvg from \"@ant-design/icons-svg/es/asn/PaperClipOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar PaperClipOutlined = function PaperClipOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PaperClipOutlinedSvg\n  }));\n};\nPaperClipOutlined.displayName = 'PaperClipOutlined';\nexport default /*#__PURE__*/React.forwardRef(PaperClipOutlined);"],"names":["AnalyticEcommerce","_ref","color","title","count","percentage","isLoss","extra","_jsx","MainCard","contentSX","p","children","_jsxs","Stack","spacing","Typography","variant","Grid","container","alignItems","item","Chip","label","concat","sx","ml","pl","size","defaultProps","BootstrapDialog","styled","Dialog","theme","padding","OrderTable","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","products","setProducts","_useState3","_useState4","setProductsLength","anchorRef","useRef","_useState5","_useState6","anchorEl","setAnchorEl","open","Boolean","_useState7","_useState8","opendel","setOpendel","handleClosedel","_useState9","_useState10","selectedIndex","setSelectedIndex","_useState11","_useState12","loading","setLoading","DeleteProduct","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","postData","apiData","wrap","_context","prev","next","console","log","user_id","status","StatusOfUser","post","sent","error","toastAlert","message","fetchAllproducts","stop","apply","arguments","_useState13","_useState14","page","setPage","_useState15","_useState16","rowsPerPage","setRowsPerPage","_useState17","_useState18","loader","setLoader","_ref3","_callee2","_context2","get","result","length","t0","_useState19","_useState20","productData","setProductData","fileInputRef","_useState21","_useState22","selectedImage","setSelectedImage","_useState23","_useState24","ImageFile","setImageFile","_useState25","_useState26","openEdit","setOpenEdit","handleCloseEdit","handleFileUpload","event","file","target","files","reader","FileReader","onload","readAsDataURL","_useState27","_useState28","setStatusOfUser","handleButtonClick","current","click","useEffect","Box","_Fragment","pt","xs","md","Skeleton","height","align","TableContainer","width","overflowX","position","display","maxWidth","whiteSpace","Table","pr","TableHead","TableRow","TableCell","TableBody","colSpan","style","justifyContent","Avatar","src","emptyImage","alt","marginBlock","slice","map","row","border","component","scope","cursor","onClick","product_videos_id","BASE_URL","thumbnail","backgroundColor","textTransform","fontWeight","overflow","textOverflow","description","video_url","formatDate","created_at","Tooltip","EllipsisOutlined","ref","fontSize","currentTarget","product_id","TablePagination","rowsPerPageOptions","onPageChange","newPage","onRowsPerPageChange","parseInt","value","Menu","id","onClose","MenuListProps","PaperProps","elevation","boxShadow","mt","transformOrigin","horizontal","vertical","anchorOrigin","MenuItem","DialogTitle","m","DialogContent","Divider","DialogContentText","Button","disableElevation","marginRight","disabled","IconButton","right","top","palette","grey","CloseOutlined","dividers","Formik","initialValues","name","product_name","product_id_stripe","submit","validationSchema","Yup","shape","required","onSubmit","_ref5","_callee3","values","_ref4","setErrors","setStatus","setSubmitting","resetForm","_ImageUrl","ImageUrl","postDataImage","_context3","image","postFormData","path","setTimeout","window","location","reload","success","t1","_x","_x2","_ref6","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","OutlinedInput","type","onBlur","onChange","placeholder","fullWidth","FormHelperText","InputLabel","htmlFor","multiline","rows","direction","startIcon","PaperClipOutlined","AnimateButton","UploadOutlined","borderRadius","accept","ClipLoader","total_users","setTotal_Users","total_subscriptions","setTotal_Subscriptions","total_products","setTotal_Products","total_programs","total_courses","videos","PlusOutlined","sm","lg","OrdersTable","props","React","AntdIcon","_objectSpread","icon","CloseOutlinedSvg","displayName","PaperClipOutlinedSvg"],"sourceRoot":""}
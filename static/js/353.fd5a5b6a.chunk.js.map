{"version":3,"file":"static/js/353.fd5a5b6a.chunk.js","mappings":"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","sources":["pages/authentication/AuthCard.js","pages/authentication/AuthWrapper.js","pages/authentication/auth-forms/AuthResetPasswordNew.js","pages/authentication/ResetPasswordNew.js","../node_modules/@ant-design/icons-svg/es/asn/EyeInvisibleOutlined.js","../node_modules/@ant-design/icons/es/icons/EyeInvisibleOutlined.js","../node_modules/@ant-design/icons-svg/es/asn/EyeOutlined.js","../node_modules/@ant-design/icons/es/icons/EyeOutlined.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\n// material-ui\nimport { Box } from '@mui/material';\n\n// project import\nimport MainCard from 'components/MainCard';\n\n// ==============================|| AUTHENTICATION - CARD WRAPPER ||============================== //\n\nconst AuthCard = ({ children, ...other }) => (\n  <MainCard\n    sx={{\n      maxWidth: { xs: 400, lg: 475 },\n      margin: { xs: 2.5, md: 3 },\n      '& > *': {\n        flexGrow: 1,\n        flexBasis: '50%'\n      }\n    }}\n    content={false}\n    {...other}\n    border={false}\n    boxShadow\n  >\n    <Box sx={{ p: { xs: 2, sm: 3, md: 4, xl: 5 } }}>{children}</Box>\n  </MainCard>\n);\n\nAuthCard.propTypes = {\n  children: PropTypes.node\n};\n\nexport default AuthCard;\n","import PropTypes from 'prop-types';\n\n// material-ui\nimport { Box, Grid,Avatar } from '@mui/material';\n\n// project import\nimport AuthCard from './AuthCard';\nimport Logo from 'components/Logo';\nimport AuthFooter from 'components/cards/AuthFooter';\n\n// assets\nimport AuthBackground from 'assets/images/auth/AuthBackground';\nimport logo_code from '../../assets/images/logom.png'\n\n// ==============================|| AUTHENTICATION - WRAPPER ||============================== //\n\nconst AuthWrapper = ({ children }) => (\n  <Box sx={{ minHeight: '100vh' }}>\n    {/* <AuthBackground /> */}\n    <Grid\n      container\n      direction=\"column\"\n      justifyContent=\"flex-end\"\n      sx={{\n        minHeight: '100vh'\n      }}\n    >\n      <Grid item xs={12} sx={{ ml: 3, mt: 3 }}>\n        {/* <Logo /> */}\n        <Avatar src={logo_code} variant=\"square\" style={{width:'150px',resizeMode:'contain',height:'auto'}} alt=\"Logo\"/>\n      </Grid>\n      <Grid item xs={12}>\n        <Grid\n          item\n          xs={12}\n          container\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          sx={{ minHeight: { xs: 'calc(100vh - 134px)', md: 'calc(100vh - 112px)' } }}\n        >\n          <Grid item>\n            <AuthCard>{children}</AuthCard>\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid item xs={12} sx={{ m: 3, mt: 1 }}>\n        {/* <AuthFooter /> */}\n      </Grid>\n    </Grid>\n  </Box>\n);\n\nAuthWrapper.propTypes = {\n  children: PropTypes.node\n};\n\nexport default AuthWrapper;\n","import React, { useEffect, useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\n// import axios from \"axios\"\n// material-ui\nimport {\n  Button,\n  Checkbox,\n  Divider,\n  FormControlLabel,\n  FormHelperText,\n  Grid,\n  Link,\n  IconButton,\n  InputAdornment,\n  InputLabel,\n  OutlinedInput,\n  Stack,\n  Tooltip\n} from '@mui/material';\n\n// third party\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\n\n// project import\nimport AnimateButton from 'components/@extended/AnimateButton';\n\n// assets\nimport { EyeOutlined, EyeInvisibleOutlined } from '@ant-design/icons';\n\n// ============================|| FIREBASE - LOGIN ||============================ //\nimport { useNavigate } from 'react-router-dom';\nimport toastAlert from 'components/ToastAlert/index';\nimport { post } from 'Urls/api';\nimport ClipLoader from 'react-spinners/ClipLoader';\nconst AuthLogin = () => {\n  const navigate = useNavigate()\n  const [checked, setChecked] = React.useState(false);\n\n  const [showPassword, setShowPassword] = React.useState(false);\n  const handleClickShowPassword = () => {\n    setShowPassword(!showPassword);\n  };\n\n  const handleMouseDownPassword = (event) => {\n    event.preventDefault();\n  };\n\n  const [showCPassword, setShowCPassword] = React.useState(false);\n  const handleClickShowCPassword = () => {\n    setShowCPassword(!showCPassword);\n  };\n\n  const handleMouseDownCPassword = (event) => {\n    event.preventDefault();\n  };\n  // log out function to log the user out of google and set the profile array to null\nconst [emailUser,setEmailUser]=useState('')\n\n  useEffect(() => {\n\n    const userSession = JSON.parse(localStorage.getItem(\"@Reset\"));\n    if (userSession === null || userSession === undefined) {\n\n\n    } else {\n    setEmailUser(userSession.email)\n\n      \n    }\n\n  }, []);\n  return (\n    <>\n      <Formik\n        initialValues={{\n          password: '',\n          confirmPassword: '',\n          submit: null\n        }}\n        validationSchema={Yup.object().shape({\n          password: Yup.string().max(255).required('Password is required'),\n          confirmPassword: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Confirm Password is required'),\n        })}\n        onSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\n          try {\n            console.log(values)\n            const postData = {\n              email: emailUser,\n              password: values.password,\n            };\n            try {\n              const apiData = await post('user/updatePassword', postData); // Specify the endpoint you want to call\n              console.log(apiData)\n              if (apiData.error) {\n              console.log(\"error true\")\n              toastAlert(\"error\",apiData.message)\n              \n              } else {\n                localStorage.removeItem('@Reset');\n                localStorage.setItem(\"@AdminSession\", JSON.stringify({ user: apiData.data[0] }));\n                navigate('/')\n                setStatus({ success: false });\n                setSubmitting(false);\n              }\n            } catch (error) {\n              toastAlert(\"error\", \"Something Went Wrong\")\n              // setNextloader(false)\n              setStatus({ success: false });\n              setSubmitting(false);\n              // console.error('Error fetching data:', error);\n              // setNextloader(false)\n\n            }\n            // setStatus({ success: false });\n            // setSubmitting(false);\n          } catch (err) {\n            setStatus({ success: false });\n            setErrors({ submit: err.message });\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values }) => (\n          <form noValidate onSubmit={handleSubmit}>\n            <Grid container spacing={3}>\n              <Grid item xs={12}>\n                <Stack spacing={1}>\n                  <InputLabel htmlFor=\"email-login\">Email Address</InputLabel>\n                  {/* on hover on input field i want to show text u cant update email \n                   */}\n                   <Tooltip title=\"Can't update email because subscriptions active on that email\" >\n                  <OutlinedInput\n                  disabled\n                    id=\"email-login\"\n                    type=\"email\"\n                    value={emailUser}\n                    name=\"email\"\n                    placeholder=\"Enter email address\"\n                    fullWidth\n                  />\n                  </Tooltip>\n                </Stack>\n              </Grid>\n              <Grid item xs={12}>\n                <Stack spacing={1}>\n                  <InputLabel htmlFor=\"password-login\">Password</InputLabel>\n                  <OutlinedInput\n                    fullWidth\n                    error={Boolean(touched.password && errors.password)}\n                    id=\"-password-login\"\n                    type={showPassword ? 'text' : 'password'}\n                    value={values.password}\n                    name=\"password\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    endAdornment={\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          aria-label=\"toggle password visibility\"\n                          onClick={handleClickShowPassword}\n                          onMouseDown={handleMouseDownPassword}\n                          edge=\"end\"\n                          size=\"large\"\n                        >\n                          {showPassword ? <EyeOutlined /> : <EyeInvisibleOutlined />}\n                        </IconButton>\n                      </InputAdornment>\n                    }\n                    placeholder=\"Enter password\"\n                  />\n                  {touched.password && errors.password && (\n                    <FormHelperText error id=\"standard-weight-helper-text-password-login\">\n                      {errors.password}\n                    </FormHelperText>\n                  )}\n                </Stack>\n              </Grid>\n              <Grid item xs={12}>\n                <Stack spacing={1}>\n                  <InputLabel htmlFor=\"password-login\">Confirm Password</InputLabel>\n                  <OutlinedInput\n                    fullWidth\n                    error={Boolean(touched.confirmPassword && errors.confirmPassword)}\n                    id=\"-password-login\"\n                    type={showCPassword ? 'text' : 'password'}\n                    value={values.confirmPassword}\n                    name=\"confirmPassword\"\n                    onBlur={handleBlur}\n                    onChange={handleChange}\n                    endAdornment={\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          aria-label=\"toggle password visibility\"\n                          onClick={handleClickShowCPassword}\n                          onMouseDown={handleMouseDownCPassword}\n                          edge=\"end\"\n                          size=\"large\"\n                        >\n                          {showCPassword ? <EyeOutlined /> : <EyeInvisibleOutlined />}\n                        </IconButton>\n                      </InputAdornment>\n                    }\n                    placeholder=\"Enter password\"\n                  />\n                  {touched.confirmPassword && errors.confirmPassword && (\n                    <FormHelperText error id=\"standard-weight-helper-text-password-login\">\n                      {errors.confirmPassword}\n                    </FormHelperText>\n                  )}\n                </Stack>\n              </Grid>\n\n             \n              {errors.submit && (\n                <Grid item xs={12}>\n                  <FormHelperText error>{errors.submit}</FormHelperText>\n                </Grid>\n              )}\n              <Grid item xs={12}>\n                <AnimateButton>\n                  <Button disableElevation\n                  startIcon={isSubmitting? <ClipLoader color=\"white\" loading={isSubmitting} size={20} />\n                  :null\n                  }\n                   disabled={isSubmitting} fullWidth size=\"large\" type=\"submit\" variant=\"contained\" color=\"primary\">\n                    Reset Password\n                  </Button>\n                </AnimateButton>\n              </Grid>\n              \n             \n            </Grid>\n          </form>\n        )}\n      </Formik>\n    </>\n  );\n};\n\nexport default AuthLogin;\n","import { Link } from 'react-router-dom';\n\n// material-ui\nimport { Grid, Stack, Typography } from '@mui/material';\n\n// project import\nimport AuthLogin from './auth-forms/AuthResetPasswordNew';\nimport AuthWrapper from './AuthWrapper';\n\n// ================================|| LOGIN ||================================ //\n\nconst ResetPasswordNew = () => (\n  <AuthWrapper>\n    <Grid container spacing={3}>\n      <Grid item xs={12}>\n        <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"baseline\" sx={{ mb: { xs: -0.5, sm: 0.5 } }}>\n          <Typography variant=\"h3\">Reset Password</Typography>\n         \n        </Stack>\n      </Grid>\n      <Grid item xs={12}>\n        <AuthLogin />\n      </Grid>\n    </Grid>\n  </AuthWrapper>\n);\n\nexport default ResetPasswordNew;\n","// This icon file is generated automatically.\nvar EyeInvisibleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M942.2 486.2Q889.47 375.11 816.7 305l-50.88 50.88C807.31 395.53 843.45 447.4 874.7 512 791.5 684.2 673.4 766 512 766q-72.67 0-133.87-22.38L323 798.75Q408 838 512 838q288.3 0 430.2-300.3a60.29 60.29 0 000-51.5zm-63.57-320.64L836 122.88a8 8 0 00-11.32 0L715.31 232.2Q624.86 186 512 186q-288.3 0-430.2 300.3a60.3 60.3 0 000 51.5q56.69 119.4 136.5 191.41L112.48 835a8 8 0 000 11.31L155.17 889a8 8 0 0011.31 0l712.15-712.12a8 8 0 000-11.32zM149.3 512C232.6 339.8 350.7 258 512 258c54.54 0 104.13 9.36 149.12 28.39l-70.3 70.3a176 176 0 00-238.13 238.13l-83.42 83.42C223.1 637.49 183.3 582.28 149.3 512zm246.7 0a112.11 112.11 0 01146.2-106.69L401.31 546.2A112 112 0 01396 512z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M508 624c-3.46 0-6.87-.16-10.25-.47l-52.82 52.82a176.09 176.09 0 00227.42-227.42l-52.82 52.82c.31 3.38.47 6.79.47 10.25a111.94 111.94 0 01-112 112z\" } }] }, \"name\": \"eye-invisible\", \"theme\": \"outlined\" };\nexport default EyeInvisibleOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport EyeInvisibleOutlinedSvg from \"@ant-design/icons-svg/es/asn/EyeInvisibleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar EyeInvisibleOutlined = function EyeInvisibleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: EyeInvisibleOutlinedSvg\n  }));\n};\nEyeInvisibleOutlined.displayName = 'EyeInvisibleOutlined';\nexport default /*#__PURE__*/React.forwardRef(EyeInvisibleOutlined);","// This icon file is generated automatically.\nvar EyeOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 000 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258c161.3 0 279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766zm-4-430c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z\" } }] }, \"name\": \"eye\", \"theme\": \"outlined\" };\nexport default EyeOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport EyeOutlinedSvg from \"@ant-design/icons-svg/es/asn/EyeOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar EyeOutlined = function EyeOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: EyeOutlinedSvg\n  }));\n};\nEyeOutlined.displayName = 'EyeOutlined';\nexport default /*#__PURE__*/React.forwardRef(EyeOutlined);"],"names":["_ref","children","other","_objectWithoutProperties","_excluded","_jsx","MainCard","_objectSpread","sx","maxWidth","xs","lg","margin","md","flexGrow","flexBasis","content","border","boxShadow","Box","p","sm","xl","minHeight","_jsxs","Grid","container","direction","justifyContent","item","ml","mt","Avatar","src","logo_code","variant","style","width","resizeMode","height","alt","alignItems","AuthCard","m","navigate","useNavigate","_React$useState","React","_React$useState2","_slicedToArray","_React$useState3","_React$useState4","showPassword","setShowPassword","handleClickShowPassword","handleMouseDownPassword","event","preventDefault","_React$useState5","_React$useState6","showCPassword","setShowCPassword","handleClickShowCPassword","handleMouseDownCPassword","_useState","useState","_useState2","emailUser","setEmailUser","useEffect","userSession","JSON","parse","localStorage","getItem","undefined","email","_Fragment","Formik","initialValues","password","confirmPassword","submit","validationSchema","Yup","shape","max","required","oneOf","onSubmit","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","values","setErrors","setStatus","setSubmitting","postData","apiData","wrap","_context","prev","next","console","log","post","sent","error","toastAlert","message","removeItem","setItem","stringify","user","data","success","t0","t1","stop","_x","_x2","apply","arguments","_ref3","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","noValidate","spacing","Stack","InputLabel","htmlFor","Tooltip","title","OutlinedInput","disabled","id","type","value","name","placeholder","fullWidth","Boolean","onBlur","onChange","endAdornment","InputAdornment","position","IconButton","onClick","onMouseDown","edge","size","EyeOutlined","EyeInvisibleOutlined","FormHelperText","AnimateButton","Button","disableElevation","startIcon","ClipLoader","color","loading","AuthWrapper","mb","Typography","AuthLogin","props","ref","AntdIcon","icon","EyeInvisibleOutlinedSvg","displayName","EyeOutlinedSvg"],"sourceRoot":""}
{"version":3,"file":"static/js/386.1ae966d6.chunk.js","mappings":"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","sources":["pages/reviews/OrdersTable.js","pages/reviews/SamplePage.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\n// material-ui\nimport {\n  Box, Menu, MenuItem,\n  Button,\n  Skeleton,\n  TablePagination,\n  Tooltip, Grid, Avatar, Table, TableBody, TableCell,\n  TableContainer, TableHead, TableRow, Typography,\n  Dialog, DialogContent, DialogContentText, DialogTitle, Divider\n} from '@mui/material';\n// project import\nimport emptyImage from \"../../assets/images/icons8-empty-64.png\"\nimport { BASE_URL, get, post } from 'Urls/api';\nimport {\n  EllipsisOutlined,\n  PlusOutlined\n} from '@ant-design/icons';\nimport { useNavigate } from 'react-router-dom';\nimport { formatDate } from 'utils/formatDate';\nimport AnimateButton from 'components/@extended/AnimateButton';\nimport toastAlert from 'components/ToastAlert/index';\n\n\nexport default function OrderTable() {\n  const navigate = useNavigate();\n  const [products, setProducts] = useState([]);\n  // get all products \n\n  const anchorRef = useRef(null);\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const open = Boolean(anchorEl);\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n const [opendel, setOpendel] = useState(false);\n  const handleClosedel = () => {\n    setOpendel(false);\n  };\n  const [loading, setLoading] = useState(false);\n  const DeleteProduct = async () => {\n    try {\n      setLoading(true)\n      const postData={\n        review_id:selectedIndex\n      }\n      const apiData = await post(`review/deleteReview`,postData); // Specify the endpoint you want to call\n      console.log(\"Get all \")\n      if(apiData.error){\n        setLoading(false)\n        toastAlert(\"error\",'Something went wrong')\n\n      }else{\n        setLoading(false)\n        toastAlert(\"success\",'Review Deleted Success')\n        setOpendel(false)\n        fetchAllproducts()\n      }\n    } catch (error) {\n      setLoading(false)\n    }\n  }\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const [loader, setLoader] = useState(true)\n\n  // Use effect \n  const fetchAllproducts = async () => {\n    try {\n      const apiData = await get('review/getAllReviews'); // Specify the endpoint you want to call\n      console.log(\"ALL Courses\")\n      console.log(apiData)\n\n      if (apiData.error) {\n        setLoader(false)\n      } else {\n        setProducts(apiData.result)\n        setLoader(false)\n      }\n    } catch (error) {\n      setLoader(false)\n    }\n  }\n  useEffect(() => {\n    fetchAllproducts()\n  }, [page]);\n  return (\n    <Box>\n      {loader ? <>\n        <Grid container spacing={2} pt={10} >\n          {/* For variant=\"text\", adjust the height via font-size */}\n\n          <Grid item xs={12} md={12} >\n\n            <Skeleton variant=\"rectangular\" height={100} />\n\n          </Grid>\n          <Grid item xs={12} md={12} >\n\n            <Skeleton variant=\"rectangular\" height={100} />\n\n          </Grid>\n          <Grid item xs={12} md={12} >\n\n            <Skeleton variant=\"rectangular\" height={100} />\n\n          </Grid>\n\n        </Grid>\n      </> : <>\n        <Grid container spacing={2}>\n          <Grid item xs={12} md={12} align=\"right\">\n\n            <TableContainer\n              sx={{\n                width: '100%',\n                overflowX: 'auto',\n                position: 'relative',\n                display: 'block',\n                maxWidth: '100%',\n                '& td, & th': { whiteSpace: 'nowrap' }\n              }}\n            >\n              <Table\n                aria-labelledby=\"tableTitle\"\n                sx={{\n                  '& .MuiTableCell-root:first-of-type': {\n                    pl: 2\n                  },\n                  '& .MuiTableCell-root:last-of-type': {\n                    pr: 3\n                  }\n                }}\n              >\n                <TableHead>\n                  <TableRow>\n                    <TableCell align=\"left\">Name</TableCell>\n                    <TableCell align=\"center\">Description</TableCell>\n                    <TableCell align=\"center\">Created</TableCell>\n                    <TableCell align=\"right\"></TableCell>\n                    <TableCell align=\"right\"></TableCell>\n\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {products.length === 0 ? <>\n                    <TableRow>\n                      <TableCell colSpan={6} align=\"center\">\n                        <Box style={{\n                          display: 'flex',\n                          justifyContent: 'center'\n                        }}>\n                          <Avatar variant=\"square\" src={emptyImage} alt=\"No Data\" style={{ width: '64px', height: 'auto', marginBlock: '2%' }} />\n                        </Box>\n                      </TableCell>\n\n                    </TableRow>\n                  </> :\n                    <>\n                      {products.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n                        <>\n                          <TableRow\n                            key={row?.product_id}\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                          >\n                            <TableCell component=\"th\" scope=\"row\" style={{ cursor: 'pointer' }} onClick={() => navigate(`/course_detail/${row.package_id}`)}>\n                              <Grid container spacing={2}>\n                                <Grid item xs={12} md={3}>\n                                  <Avatar variant=\"square\"\n                                    src={`${BASE_URL}${row?.image}`}\n                                    style={{\n                                      backgroundColor: '#03356b',\n                                      textTransform: 'capitalize'\n                                    }} />\n\n\n                                </Grid>\n                                <Grid item xs={12} md={9} style={\n                                  {\n                                    display:'flex',\n                                    justifyContent:'center',\n                                    alignItems:'center'\n                                  }\n                                }>\n                                  <Typography variant=\"h5\" style={{ fontWeight: 200 }}>{row?.name}</Typography>\n                                </Grid>\n                              </Grid>\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Typography\n                               \n                              >\n                                {row?.review}\n                              </Typography>\n\n                            </TableCell>\n\n\n                            <TableCell align=\"center\">{formatDate(row?.created_at)}</TableCell>\n                            \n                            <TableCell align=\"center\">\n                              <Tooltip title=\"Action\">\n                                <EllipsisOutlined ref={anchorRef} style={{ fontSize: '30px', cursor: 'pointer' }} onClick={\n                                  (event) => {\n                                    setSelectedIndex(row.review_id)\n                                    setAnchorEl(event.currentTarget);\n                                  }} />\n                              </Tooltip>\n                            </TableCell>\n                          </TableRow>\n\n\n                        </>\n                      ))}</>}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n          <Grid item xs={12} md={12} align=\"right\">\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25]}\n              component=\"div\"\n              count={products.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n\n          </Grid>\n        </Grid>\n        <Menu\n          id=\"basic-menu\"\n          anchorEl={anchorEl}\n          open={open}\n          onClose={handleClose}\n          MenuListProps={{\n            'aria-labelledby': 'basic-button',\n          }}\n          PaperProps={{\n            elevation: 0,\n            sx: {\n              overflow: 'visible',\n              boxShadow: '0px 2px 30px -15px rgba(94,94,107,0.67)',\n              mt: 1.5,\n\n            },\n          }}\n          transformOrigin={{ horizontal: 'right', vertical: 'top' }}\n          anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\n        >\n          <MenuItem onClick={() => navigate(`/reviewEdit/${selectedIndex}`)}>Edit Review</MenuItem>\n          <MenuItem onClick={() => setOpendel(true)}>Delete </MenuItem>\n\n\n        </Menu>\n          {/* delete Dialog  */}\n          <Dialog\n          open={opendel}\n          onClose={handleClosedel}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle sx={{ m: 0, p: 2, fontSize: '20px', fontWeight: 700 }} id=\"customized-dialog-title\">\n            Confirmation Alert\n          </DialogTitle>\n          <DialogContent>\n            <Grid container spacing={2}>\n              <Grid item xs={12}>\n                <Divider />\n              </Grid>\n              <Grid item xs={12}>\n                <DialogContentText id=\"alert-dialog-description\" style={{ fontSize: '15px', color: 'black' }}>\n                  Are you sure you want to Delete?\n                </DialogContentText>\n              </Grid>\n              <Grid item xs={12}>\n                <Divider />\n              </Grid>\n              <Grid item xs={12} align=\"right\">\n                <Button disableElevation onClick={handleClosedel} variant=\"outlined\" size=\"medium\" style={{ marginRight: '12px', fontWeight: 700, color: 'gray', boxShadow: ' 0px 2px 30px -15px rgba(94,94,107,0.67)' }} color=\"secondary\">\n                  No\n                </Button>\n                <Button disabled={loading} onClick={() => DeleteProduct()} disableElevation variant=\"contained\" size=\"medium\" style={{ fontWeight: 700, color: 'white', boxShadow: ' 0px 2px 30px -15px rgba(94,94,107,0.67)' }} color=\"error\">\n                  Yes\n                </Button>\n              </Grid>\n            </Grid>\n          </DialogContent>\n        </Dialog>\n      </>}\n    </Box>\n  );\n}\n","// material-ui\nimport {\n  Typography, Grid, Button\n} from '@mui/material';\nimport { useEffect, useState } from 'react';\n// project import\nimport OrdersTable from './OrdersTable';\nimport AnimateButton from 'components/@extended/AnimateButton';\nimport {\n  PlusOutlined,\n} from '@ant-design/icons';\nimport { useNavigate } from 'react-router-dom';\n\nconst Reviews = () => {\n  const navigate = useNavigate();\n\n  return (\n    <>\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={9} style={{ display: 'flex', justifyContent: 'space-between' }}>\n          <Typography variant=\"h3\" style={{ fontWeight: 700 }}>Reviews</Typography>\n\n        </Grid>\n        <Grid item xs={12} md={3} style={{ display: 'flex', justifyContent: 'right' }}>\n\n          <AnimateButton>\n            <Button\n              onClick={() => navigate('/reviewAdd')}\n              disableElevation startIcon={<PlusOutlined />} size=\"medium\" color=\"primary\" variant=\"contained\">\n              Review\n            </Button>\n          </AnimateButton>\n        </Grid>\n        <Grid item xs={12} md={12}>\n          <OrdersTable />\n        </Grid>\n      \n      </Grid>\n\n    </>\n  )\n};\n\nexport default Reviews;\n"],"names":["OrderTable","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","products","setProducts","anchorRef","useRef","_useState3","_useState4","anchorEl","setAnchorEl","open","Boolean","_useState5","_useState6","selectedIndex","setSelectedIndex","_useState7","_useState8","page","setPage","_useState9","_useState10","rowsPerPage","setRowsPerPage","_useState11","_useState12","opendel","setOpendel","handleClosedel","_useState13","_useState14","loading","setLoading","DeleteProduct","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","postData","apiData","wrap","_context","prev","next","review_id","post","sent","console","log","error","toastAlert","fetchAllproducts","t0","stop","apply","arguments","_useState15","_useState16","loader","setLoader","_ref2","_callee2","_context2","get","result","useEffect","_jsx","Box","children","_Fragment","_jsxs","Grid","container","spacing","pt","item","xs","md","Skeleton","variant","height","align","TableContainer","sx","width","overflowX","position","display","maxWidth","whiteSpace","Table","pl","pr","TableHead","TableRow","TableCell","TableBody","length","colSpan","style","justifyContent","Avatar","src","emptyImage","alt","marginBlock","slice","map","row","border","component","scope","cursor","onClick","concat","package_id","BASE_URL","image","backgroundColor","textTransform","alignItems","Typography","fontWeight","name","review","formatDate","created_at","Tooltip","title","EllipsisOutlined","ref","fontSize","event","currentTarget","product_id","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","target","value","Menu","id","onClose","MenuListProps","PaperProps","elevation","overflow","boxShadow","mt","transformOrigin","horizontal","vertical","anchorOrigin","MenuItem","Dialog","DialogTitle","m","p","DialogContent","Divider","DialogContentText","color","Button","disableElevation","size","marginRight","disabled","AnimateButton","startIcon","PlusOutlined","OrdersTable"],"sourceRoot":""}
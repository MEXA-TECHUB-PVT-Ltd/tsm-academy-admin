{"version":3,"file":"static/js/6.8edb44b5.chunk.js","mappings":"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","sources":["pages/courseEdit/SamplePage.js","../node_modules/@ant-design/icons-svg/es/asn/PaperClipOutlined.js","../node_modules/@ant-design/icons/es/icons/PaperClipOutlined.js"],"sourcesContent":["// material-ui\nimport {\n  Typography, Grid, Button, Box,\n  FormHelperText,\n  InputLabel,\n  OutlinedInput,\n  Avatar,\n  Stack,\n  Tooltip,\n\n} from '@mui/material';\nimport { useEffect, useRef, useState } from 'react';\nimport AnimateButton from 'components/@extended/AnimateButton';\nimport {\n  PaperClipOutlined,\n  UploadOutlined,\n  ArrowLeftOutlined\n} from '@ant-design/icons';\nimport { ClipLoader } from \"react-spinners\";\nimport toastAlert from 'components/ToastAlert/index';\nimport { useNavigate } from 'react-router-dom';\nimport { BASE_URL, get, post, postFormData } from 'Urls/api';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\nimport { useParams } from 'react-router-dom';\n\nconst CourseEdit = () => {\n  //  Select Image \n  const [isSubmitting, setIsSubmitting] = useState(false)\n  const fileInputRef = useRef(null);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [ImageUrlData, setImageUrlData] = useState('');\n\n  const [ImageFile, setImageFile] = useState(null);\n  const { id } = useParams();\n\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      setImageFile(file)\n      const reader = new FileReader();\n      reader.onload = () => {\n        setSelectedImage(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleButtonClick = () => {\n    fileInputRef.current.click();\n  };\n  const navigate = useNavigate();\n  const [name, setname] = useState('')\n  const [description, setdescription] = useState('')\n  const [stripe_payment_link, setstripe_payment_link] = useState('')\n  const [package_price, setpackage_price] = useState('')\n  const [offer_price, setoffer_price] = useState('')\n  const [total_students, settotal_students] = useState('')\n  const [selectedProgram, setSelectedProgram] = useState('')\n  const editSave = async () => {\n    if(name === '' || name === null||description === '' || description === null||stripe_payment_link === '' || stripe_payment_link === null||package_price === '' || package_price === null||offer_price === '' || offer_price === null||total_students === '' || total_students === null){\n      toastAlert(\"error\", \"All fields are required\")\n    }\n      else{\n let ImageUrl;\n    let postData;\n    if (ImageFile === null || ImageFile === \"\") {\n      // toastAlert(\"error\", \"Image is required\")\n      postData = {\n        package_id: id,\n        // image: ImageUrl?.path,\n        program_id: selectedProgram,\n        package_name: name,\n        description: description,\n        package_price: package_price,\n        stripe_payment_link: stripe_payment_link,\n        type: \"one-time\",\n        package_offer_price: offer_price,\n        total_students: total_students\n      };\n    } else {\n      const postDataImage = {\n        image: ImageFile\n      };\n      ImageUrl = await postFormData(postDataImage); // Specify the endpoint you want to call\n      console.log(ImageUrl)\n      postData = {\n        package_id: id,\n        image: ImageUrl?.path,\n        program_id: selectedProgram,\n        package_name: name,\n        description: description,\n        package_price: package_price,\n        stripe_payment_link: stripe_payment_link,\n        type: \"one-time\",\n        package_offer_price: offer_price,\n        total_students: total_students\n      };\n    }\n    setIsSubmitting(true);\n\n    try {\n      // craete product \n      const apiData = await post('package/update', postData); // Specify the endpoint you want to call\n      console.log(\"ADD Packahge \")\n\n      console.log(apiData)\n      if (apiData.error) {\n        console.log(\"error true\")\n        toastAlert(\"error\", apiData.message)\n        setIsSubmitting(false);\n\n      } else {\n\n        // resetForm();\n        setTimeout(() => {\n          // window.location.reload();\n          toastAlert(\"success\", \"Product Updated Successfully\")\n          navigate('/courses')\n        }, 1000);\n\n        setIsSubmitting(false);\n      }\n    } catch (error) {\n      toastAlert(\"error\", \"Something Went Wrong\")\n      // setNextloader(false)\n      setIsSubmitting(false);\n      // console.error('Error fetching data:', error);\n      // setNextloader(false)\n\n    }\n      }\n   \n  }\n  const fetchAllprograms = async () => {\n    try {\n\n      const apiData = await get('program/get'); // Specify the endpoint you want to call\n      console.log(\"ALL PROGRAMS\")\n\n      console.log(apiData)\n\n      if (apiData.error) {\n      } else {\n        setSelectedProgram(apiData.result[0].program_id)\n      }\n    } catch (error) {\n\n    }\n  }\n\n  const fetchCourse = async () => {\n    try {\n      const postData = {\n        package_id: id\n      }\n      const apiData = await post('package/getByProgramId', postData); // Specify the endpoint you want to call\n      console.log(\"Course edit \")\n\n      console.log(apiData)\n\n      if (apiData.error) {\n      } else {\n        setname(apiData?.data?.course?.package_name)\n        setdescription(apiData?.data?.course?.description)\n        setstripe_payment_link(apiData?.data?.course?.stripe_payment_link)\n        setpackage_price(apiData?.data?.course?.package_price)\n        setoffer_price(apiData?.data?.course?.package_offer_price)\n        settotal_students(apiData?.data?.course?.total_students)\n        setImageUrlData(apiData?.data?.course?.image)\n\n      }\n    } catch (error) {\n\n    }\n  }\n\n  useEffect(() => {\n    fetchAllprograms()\n    fetchCourse()\n\n  }, []);\n  return (\n    <>\n      <Grid container spacing={2}>\n\n\n        <Grid item xs={12} md={12} style={{ position: 'relative' }}>\n\n          <Grid container spacing={2}>\n            <Grid item xs={12} md={12} style={{\n              display: 'flex',\n              flexDirection: 'row',\n              justifyContent: 'left',\n              marginBottom: '2%'\n            }}>\n              <Tooltip title=\"Back\">\n\n\n                <Button\n                  onClick={() => {\n                    navigate(`/users`)\n                  }\n                  }\n                  className='poppinsRegularBold'\n                  sx={{\n                    // width: '100px',\n                    paddingInline: '10px',\n                    display: \"block\",\n                    color: \"#03356b\",\n                    backgroundColor: \"none\",\n                    fontSize: '16px',\n                    fontWeight: 600,\n                    borderRadius: '50px',\n                    textTransform: 'capitalize',\n                    transition: 'background-color 0.3s, color 0.3s', // Add transition properties\n                    transitionDelay: '0.3s', // Add transition delay for hover\n                    marginRight: '10px',\n                    // border: '1px solid #03356b',\n                    '&:hover': {\n                      backgroundColor: \"#03356b\",\n                      color: 'white', // Change text color to blue on hover\n                    },\n                  }} >\n                  <ArrowLeftOutlined />\n                </Button>\n              </Tooltip>\n              <Typography variant=\"h3\" style={{ fontWeight: 700, }}>Add Course</Typography>\n            </Grid>\n            <Grid item xs={12} md={12} >\n              <Grid container spacing={3}>\n\n                <Grid item xs={12} md={12} >\n                  <Grid container spacing={2} style={{ border: '1px solid lightGray', borderRadius: '10px', backgroundColor: 'white' }}>\n                    <Grid item xs={12} md={12}>\n                      <Grid container spacing={2}>\n                        <Grid item xs={12} md={6} style={{ padding: '20px' }}>\n                          <Stack spacing={1}>\n                            <Typography variant=\"h5\">Title</Typography>\n                            <OutlinedInput\n                              id=\"email-login\"\n                              type=\"text\"\n                              value={name}\n                              name=\"name\"\n                              onChange={(e) => setname(e.target.value)}\n                              fullWidth\n                            />\n\n                          </Stack>\n                          <Stack spacing={1}>\n                            <Typography variant=\"h5\">Description</Typography>\n\n                            <OutlinedInput\n                              id=\"description\"\n                              type=\"text\"\n                              value={description}\n                              name=\"description\"\n                              onChange={(e) => setdescription(e.target.value)}\n                              fullWidth\n                              multiline\n                              rows={4}\n                            />\n\n                          </Stack>\n                          <Stack spacing={1}>\n                            <Typography variant=\"h5\">Stripe Payment Link</Typography>\n\n                            <InputLabel htmlFor=\"email-login\">This link should be get from stripe Products Dashboard .</InputLabel>\n                            <Stack spacing={1} display=\"flex\" direction=\"row\">\n                              <OutlinedInput\n                                id=\"stripe_payment_link\"\n                                type=\"text\"\n                                value={stripe_payment_link}\n                                name=\"stripe_payment_link\"\n                                onChange={(e) => setstripe_payment_link(e.target.value)}\n                                fullWidth\n\n                              />\n\n                              <Button disableElevation variant=\"outlined\" onClick={() => window.open('https://dashboard.stripe.com/', '_blank')} startIcon={<PaperClipOutlined />} size=\"medium\" style={{ color: 'rgb(76 91 104)', fontWeight: 700, backgroundColor: 'white', border: '1px solid lightGray', boxShadow: ' 0px 2px 30px -15px rgba(94,94,107,0.67)' }} color=\"secondary\">\n                                Stripe\n                              </Button>\n                            </Stack>\n\n                          </Stack>\n                          <Stack spacing={1}>\n                            <Typography variant=\"h5\"> Original Price</Typography>\n\n                            <OutlinedInput\n                              id=\"package_price\"\n                              type=\"text\"\n                              value={package_price}\n                              name=\"package_price\"\n                              onChange={(e) => setpackage_price(e.target.value)}\n                              fullWidth\n                            />\n\n                          </Stack>\n\n                          <Stack spacing={1}>\n                            <Typography variant=\"h5\">Offer Price</Typography>\n\n                            <OutlinedInput\n                              id=\"offer_price\"\n                              type=\"text\"\n                              value={offer_price}\n                              name=\"offer_price\"\n                              onChange={(e) => setoffer_price(e.target.value)}\n                              fullWidth\n                            />\n\n                          </Stack>\n\n                          <Stack spacing={1}>\n                            <Typography variant=\"h5\">Total Students</Typography>\n\n                            <OutlinedInput\n                              id=\"total_students\"\n                              type=\"text\"\n                              value={total_students}\n                              name=\"total_students\"\n                              onChange={(e) => settotal_students(e.target.value)}\n                              fullWidth\n                            />\n\n                          </Stack>\n\n\n                        </Grid>\n                        <Grid item xs={12} md={6} style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                          <Stack spacing={1}>\n                            {selectedImage === '' || selectedImage === null ? <>\n                              <Avatar src={`${BASE_URL}${ImageUrlData}`} onClick={handleButtonClick} alt=\"Selected\" style={{ width: 'auto', height: '200px', border: '1px solid lightGray', borderRadius: '10px' }} variant=\"square\" />\n\n\n                              {/* <Box onClick={handleButtonClick} style={{ width: '100%', marginInline: '2%', padding: '15px', backgroundColor: '#f2f0f0', border: '3px dotted #cecece', borderRadius: '10px' }}>\n                                      <Box style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', paddingBlock: '10%', flexDirection: 'column' }}>\n\n                                        <UploadOutlined style={{ fontSize: '50px', color: 'gray' }} />\n                                        <Typography variant=\"h6\">Choose an image</Typography>\n\n                                      </Box>\n                                    </Box> */}\n                            </> :\n                              <>\n                                <Box onClick={handleButtonClick} style={{ marginInline: '2%', backgroundColor: '#f2f0f0', border: '3px dotted #cecece', borderRadius: '10px', display: 'flex', justifyContent: 'center', flexDirection: 'column' }}>\n\n                                  {selectedImage &&\n                                    <Avatar src={selectedImage} alt=\"Selected\" style={{ width: 'auto', height: '200px', border: '1px solid lightGray', borderRadius: '10px' }} variant=\"square\" />\n                                  }\n                                  <AnimateButton>\n                                    <Button onClick={() => setSelectedImage('')} disableElevation variant=\"outlined\" size=\"medium\" style={{ color: 'rgb(76 91 104)', fontWeight: 700, backgroundColor: 'white', border: '1px solid lightGray', boxShadow: ' 0px 2px 30px -15px rgba(94,94,107,0.67)', marginBlock: '1%' }} color=\"secondary\">\n                                      Change Image\n                                    </Button>\n                                  </AnimateButton>\n                                </Box>\n\n                              </>}\n\n                            <input\n                              type=\"file\"\n                              accept=\"image/*\"\n                              style={{ display: 'none' }}\n                              id=\"fileInput\"\n                              onChange={handleFileUpload}\n                              ref={fileInputRef}\n                            />\n\n\n                          </Stack>\n                        </Grid>\n                      </Grid>\n                    </Grid>\n                  </Grid>\n                </Grid>\n\n\n\n                <Grid item xs={12} align=\"right\">\n\n                  <Button disabled={isSubmitting}\n                    startIcon={\n                      isSubmitting ?\n                        <ClipLoader\n                          color={\"#fff\"}\n                          loading={isSubmitting}\n                          size={20}\n                        />\n                        : null\n                    }\n                    onClick={() => editSave()}\n\n                    disableElevation variant=\"contained\" size=\"medium\" style={{ fontWeight: 700, color: 'white', boxShadow: ' 0px 2px 30px -15px rgba(94,94,107,0.67)', marginInline: '2%' }} color=\"primary\">\n                    Save\n                  </Button>\n\n\n                </Grid>\n              </Grid>\n              {/* end  */}\n            </Grid>\n          </Grid>\n        </Grid>\n\n\n      </Grid>\n\n    </>\n  )\n};\n\nexport default CourseEdit;\n","// This icon file is generated automatically.\nvar PaperClipOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M779.3 196.6c-94.2-94.2-247.6-94.2-341.7 0l-261 260.8c-1.7 1.7-2.6 4-2.6 6.4s.9 4.7 2.6 6.4l36.9 36.9a9 9 0 0012.7 0l261-260.8c32.4-32.4 75.5-50.2 121.3-50.2s88.9 17.8 121.2 50.2c32.4 32.4 50.2 75.5 50.2 121.2 0 45.8-17.8 88.8-50.2 121.2l-266 265.9-43.1 43.1c-40.3 40.3-105.8 40.3-146.1 0-19.5-19.5-30.2-45.4-30.2-73s10.7-53.5 30.2-73l263.9-263.8c6.7-6.6 15.5-10.3 24.9-10.3h.1c9.4 0 18.1 3.7 24.7 10.3 6.7 6.7 10.3 15.5 10.3 24.9 0 9.3-3.7 18.1-10.3 24.7L372.4 653c-1.7 1.7-2.6 4-2.6 6.4s.9 4.7 2.6 6.4l36.9 36.9a9 9 0 0012.7 0l215.6-215.6c19.9-19.9 30.8-46.3 30.8-74.4s-11-54.6-30.8-74.4c-41.1-41.1-107.9-41-149 0L463 364 224.8 602.1A172.22 172.22 0 00174 724.8c0 46.3 18.1 89.8 50.8 122.5 33.9 33.8 78.3 50.7 122.7 50.7 44.4 0 88.8-16.9 122.6-50.7l309.2-309C824.8 492.7 850 432 850 367.5c.1-64.6-25.1-125.3-70.7-170.9z\" } }] }, \"name\": \"paper-clip\", \"theme\": \"outlined\" };\nexport default PaperClipOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PaperClipOutlinedSvg from \"@ant-design/icons-svg/es/asn/PaperClipOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar PaperClipOutlined = function PaperClipOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PaperClipOutlinedSvg\n  }));\n};\nPaperClipOutlined.displayName = 'PaperClipOutlined';\nexport default /*#__PURE__*/React.forwardRef(PaperClipOutlined);"],"names":["_useState","useState","_useState2","_slicedToArray","isSubmitting","setIsSubmitting","fileInputRef","useRef","_useState3","_useState4","selectedImage","setSelectedImage","_useState5","_useState6","ImageUrlData","setImageUrlData","_useState7","_useState8","ImageFile","setImageFile","id","useParams","handleButtonClick","current","click","navigate","useNavigate","_useState9","_useState10","name","setname","_useState11","_useState12","description","setdescription","_useState13","_useState14","stripe_payment_link","setstripe_payment_link","_useState15","_useState16","package_price","setpackage_price","_useState17","_useState18","offer_price","setoffer_price","_useState19","_useState20","total_students","settotal_students","_useState21","_useState22","selectedProgram","setSelectedProgram","editSave","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","ImageUrl","postData","_ImageUrl","postDataImage","apiData","wrap","_context","prev","next","toastAlert","package_id","program_id","package_name","type","package_offer_price","image","postFormData","sent","console","log","path","post","error","message","setTimeout","t0","stop","apply","arguments","fetchAllprograms","_ref2","_callee2","_context2","get","result","fetchCourse","_ref3","_callee3","_apiData$data","_apiData$data$course","_apiData$data2","_apiData$data2$course","_apiData$data3","_apiData$data3$course","_apiData$data4","_apiData$data4$course","_apiData$data5","_apiData$data5$course","_apiData$data6","_apiData$data6$course","_apiData$data7","_apiData$data7$course","_context3","data","course","useEffect","_jsx","_Fragment","children","Grid","container","spacing","item","xs","md","style","position","_jsxs","display","flexDirection","justifyContent","marginBottom","Tooltip","title","Button","onClick","className","sx","paddingInline","color","backgroundColor","fontSize","fontWeight","borderRadius","textTransform","transition","transitionDelay","marginRight","ArrowLeftOutlined","Typography","variant","border","padding","Stack","OutlinedInput","value","onChange","e","target","fullWidth","multiline","rows","InputLabel","htmlFor","direction","disableElevation","window","open","startIcon","PaperClipOutlined","size","boxShadow","alignItems","Avatar","src","concat","BASE_URL","alt","width","height","Box","marginInline","AnimateButton","marginBlock","accept","event","file","files","reader","FileReader","onload","readAsDataURL","ref","align","disabled","ClipLoader","loading","props","React","AntdIcon","_objectSpread","icon","PaperClipOutlinedSvg","displayName"],"sourceRoot":""}
{"version":3,"file":"static/js/888.e8d55e91.chunk.js","mappings":"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","sources":["pages/courseAdd/SamplePage.js","../node_modules/@ant-design/icons-svg/es/asn/PaperClipOutlined.js","../node_modules/@ant-design/icons/es/icons/PaperClipOutlined.js"],"sourcesContent":["// material-ui\nimport {\n  Typography, Grid, Button, Box,\n  FormHelperText,\n  InputLabel,\n  OutlinedInput,\n  Avatar,\n  Stack,\n  Tooltip,\n\n} from '@mui/material';\nimport { useEffect, useRef, useState } from 'react';\nimport AnimateButton from 'components/@extended/AnimateButton';\nimport {\n  PaperClipOutlined,\n  UploadOutlined,\n  ArrowLeftOutlined\n} from '@ant-design/icons';\nimport { ClipLoader } from \"react-spinners\";\nimport toastAlert from 'components/ToastAlert/index';\nimport { useNavigate } from 'react-router-dom';\nimport { get, post, postFormData } from 'Urls/api';\nimport * as Yup from 'yup';\nimport { Formik } from 'formik';\n\nconst CourseAdd = () => {\n  //  Select Image \n  const fileInputRef = useRef(null);\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [ImageFile, setImageFile] = useState(null);\n\n\n  const handleFileUpload = (event) => {\n    const file = event.target.files[0];\n    if (file) {\n      setImageFile(file)\n      const reader = new FileReader();\n      reader.onload = () => {\n        setSelectedImage(reader.result);\n      };\n      reader.readAsDataURL(file);\n    }\n  };\n\n  const handleButtonClick = () => {\n    fileInputRef.current.click();\n  };\n  const navigate = useNavigate();\n  const [selectedProgram, setSelectedProgram] = useState('')\n  const fetchAllprograms = async () => {\n    try {\n\n      const apiData = await get('program/get'); // Specify the endpoint you want to call\n      console.log(\"ALL PROGRAMS\")\n\n      console.log(apiData)\n\n      if (apiData.error) {\n      } else {\n        setSelectedProgram(apiData.result[0].program_id)\n      }\n    } catch (error) {\n\n    }\n  }\n \n  useEffect(() => {\n    fetchAllprograms()\n  }, []);\n  return (\n    <>\n      <Grid container spacing={2}>\n\n\n        <Grid item xs={12} md={12} style={{ position: 'relative' }}>\n\n          <Grid container spacing={2}>\n            <Grid item xs={12} md={12} style={{\n              display: 'flex',\n              flexDirection: 'row',\n              justifyContent: 'left',\n              marginBottom: '2%'\n            }}>\n              <Tooltip title=\"Back\">\n\n\n                <Button\n                  onClick={() => {\n                    navigate(`/users`)\n                  }\n                  }\n                  className='poppinsRegularBold'\n                  sx={{\n                    // width: '100px',\n                    paddingInline: '10px',\n                    display: \"block\",\n                    color: \"#03356b\",\n                    backgroundColor: \"none\",\n                    fontSize: '16px',\n                    fontWeight: 600,\n                    borderRadius: '50px',\n                    textTransform: 'capitalize',\n                    transition: 'background-color 0.3s, color 0.3s', // Add transition properties\n                    transitionDelay: '0.3s', // Add transition delay for hover\n                    marginRight: '10px',\n                    // border: '1px solid #03356b',\n                    '&:hover': {\n                      backgroundColor: \"#03356b\",\n                      color: 'white', // Change text color to blue on hover\n                    },\n                  }} >\n                  <ArrowLeftOutlined />\n                </Button>\n              </Tooltip>\n              <Typography variant=\"h3\" style={{ fontWeight: 700, }}>Add Course</Typography>\n            </Grid>\n            <Grid item xs={12} md={12} >\n              {/* <OrdersTable /> */}\n              <Formik\n                initialValues={{\n                  name: '',\n                  description: '',\n                  stripe_payment_link: '',\n                  package_price:'',\n                  offer_price:'',\n                  total_students:'',\n                  submit: null\n                }}\n                validationSchema={Yup.object().shape({\n                  name: Yup.string().required('Name is required'),\n                  description: Yup.string().required('Description is required'),\n                  stripe_payment_link: Yup.string().required('Stripe Payment Link is required'),\n                  package_price: Yup.string().required('Price is required'),\n                  offer_price: Yup.string().required('Offer Price is required'),\n                  total_students: Yup.string().required('Total Students is required'),\n\n\n                })}\n                onSubmit={async (values, { setErrors, setStatus, setSubmitting, resetForm, }) => {\n                  try {\n                    console.log(values)\n                    console.log(ImageFile)\n                    let ImageUrl;\n                    if (ImageFile === null || ImageFile === \"\") {\n                      toastAlert(\"error\", \"Image is required\")\n\n                    } else {\n                      const postDataImage = {\n                        image: ImageFile\n                      };\n                      ImageUrl = await postFormData(postDataImage); // Specify the endpoint you want to call\n                      console.log(ImageUrl)\n                    }\n                    setSubmitting(true);\n                    const postData = {\n                      image: ImageUrl?.path,\n                      program_id: selectedProgram,\n                      package_name: values.name,\n                      description: values.description,\n                      package_price:values.package_price ,\n                      stripe_payment_link: values.stripe_payment_link,\n                      type:\"one-time\",\n                      package_offer_price:values.offer_price,\n                      total_students:values.total_students\n                    };\n                    try {\n                      // craete product \n                      const apiData = await post('package/add', postData); // Specify the endpoint you want to call\n                      console.log(\"ADD Packahge \")\n\n                      console.log(apiData)\n                      if (apiData.error) {\n                        console.log(\"error true\")\n                        toastAlert(\"error\", apiData.message)\n                        setSubmitting(false);\n\n                      } else {\n                     \n                        // resetForm();\n                        setTimeout(() => {\n                          // window.location.reload();\n                          toastAlert(\"success\", \"Course Created Successfully\")\n                          navigate('/courses')\n                        }, 1000);\n\n                        setStatus({ success: false });\n                        setSubmitting(false);\n                      }\n                    } catch (error) {\n                      toastAlert(\"error\", \"Something Went Wrong\")\n                      // setNextloader(false)\n                      setStatus({ success: false });\n                      setSubmitting(false);\n                      // console.error('Error fetching data:', error);\n                      // setNextloader(false)\n\n                    }\n                    setStatus({ success: false });\n                    setSubmitting(false);\n                  } catch (err) {\n                    setStatus({ success: false });\n                    setErrors({ submit: err.message });\n                    setSubmitting(false);\n                  }\n                }}\n              >\n                {({ errors, handleBlur, handleChange, handleSubmit, isSubmitting, touched, values,submitForm }) => (\n                  <form noValidate onSubmit={handleSubmit}>\n                    <Grid container spacing={3}>\n\n                      <Grid item xs={12} md={12} >\n                        <Grid container spacing={2} style={{ border: '1px solid lightGray', borderRadius: '10px', backgroundColor: 'white' }}>\n                          <Grid item xs={12} md={12}>\n                            <Grid container spacing={2}>\n                              <Grid item xs={12} md={6} style={{ padding: '20px' }}>\n                                <Stack spacing={1}>\n                                  <Typography variant=\"h5\">Title</Typography>\n                                  <OutlinedInput\n                                    id=\"email-login\"\n                                    type=\"text\"\n                                    value={values.name}\n                                    name=\"name\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    fullWidth\n                                    error={Boolean(touched.name && errors.name)}\n                                  />\n                                  {touched.name && errors.name && (\n                                    <FormHelperText error id=\"standard-weight-helper-text-email-login\">\n                                      {errors.name}\n                                    </FormHelperText>\n                                  )}\n                                </Stack>\n                                <Stack spacing={1}>\n                                  <Typography variant=\"h5\">Description</Typography>\n\n                                  <OutlinedInput\n                                    id=\"description\"\n                                    type=\"text\"\n                                    value={values.description}\n                                    name=\"description\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    fullWidth\n                                    multiline\n                                    rows={4}\n                                    error={Boolean(touched.description && errors.description)}\n                                  />\n                                  {touched.description && errors.description && (\n                                    <FormHelperText error id=\"standard-weight-helper-text-email-login\">\n                                      {errors.description}\n                                    </FormHelperText>\n                                  )}\n                                </Stack>\n                                <Stack spacing={1}>\n                                  <Typography variant=\"h5\">Stripe Payment Link</Typography>\n\n                                  <InputLabel htmlFor=\"email-login\">This link should be get from stripe Products Dashboard .</InputLabel>\n                                  <Stack spacing={1} display=\"flex\" direction=\"row\">\n                                    <OutlinedInput\n                                      id=\"stripe_payment_link\"\n                                      type=\"text\"\n                                      value={values.stripe_payment_link}\n                                      name=\"stripe_payment_link\"\n                                      onBlur={handleBlur}\n                                      onChange={handleChange}\n                                      fullWidth\n\n                                      error={Boolean(touched.stripe_payment_link && errors.stripe_payment_link)}\n                                    />\n\n                                    <Button disableElevation variant=\"outlined\" onClick={() => window.open('https://dashboard.stripe.com/', '_blank')} startIcon={<PaperClipOutlined />} size=\"medium\" style={{ color: 'rgb(76 91 104)', fontWeight: 700, backgroundColor: 'white', border: '1px solid lightGray', boxShadow: ' 0px 2px 30px -15px rgba(94,94,107,0.67)' }} color=\"secondary\">\n                                      Stripe\n                                    </Button>\n                                  </Stack>\n                                  {touched.stripe_payment_link && errors.stripe_payment_link && (\n                                    <FormHelperText error id=\"standard-weight-helper-text-email-login\">\n                                      {errors.stripe_payment_link}\n                                    </FormHelperText>\n                                  )}\n                                </Stack>\n                                <Stack spacing={1}>\n                                  <Typography variant=\"h5\"> Original Price</Typography>\n\n                                  <OutlinedInput\n                                    id=\"package_price\"\n                                    type=\"text\"\n                                    value={values.package_price}\n                                    name=\"package_price\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    fullWidth\n                                    error={Boolean(touched.package_price && errors.package_price)}\n                                  />\n                                  {touched.package_price && errors.package_price && (\n                                    <FormHelperText error id=\"standard-weight-helper-text-email-login\">\n                                      {errors.package_price}\n                                    </FormHelperText>\n                                  )}\n                                </Stack>\n\n                                <Stack spacing={1}>\n                                  <Typography variant=\"h5\">Offer Price</Typography>\n\n                                  <OutlinedInput\n                                    id=\"offer_price\"\n                                    type=\"text\"\n                                    value={values.offer_price}\n                                    name=\"offer_price\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    fullWidth\n                                    error={Boolean(touched.offer_price && errors.offer_price)}\n                                  />\n                                  {touched.offer_price && errors.offer_price && (\n                                    <FormHelperText error id=\"standard-weight-helper-text-email-login\">\n                                      {errors.offer_price}\n                                    </FormHelperText>\n                                  )}\n                                </Stack>\n                                \n                                <Stack spacing={1}>\n                                  <Typography variant=\"h5\">Total Students</Typography>\n\n                                  <OutlinedInput\n                                    id=\"total_students\"\n                                    type=\"text\"\n                                    value={values.total_students}\n                                    name=\"total_students\"\n                                    onBlur={handleBlur}\n                                    onChange={handleChange}\n                                    fullWidth\n                                    error={Boolean(touched.total_students && errors.total_students)}\n                                  />\n                                  {touched.total_students && errors.total_students && (\n                                    <FormHelperText error id=\"standard-weight-helper-text-email-login\">\n                                      {errors.total_students}\n                                    </FormHelperText>\n                                  )}\n                                </Stack>\n                              \n                              \n                              </Grid>\n                              <Grid item xs={12} md={6} style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                                <Stack spacing={1}>\n                                  {selectedImage === '' || selectedImage === null ? <>\n                                    <Box onClick={handleButtonClick} style={{ width: '100%', marginInline: '2%', padding: '15px', backgroundColor: '#f2f0f0', border: '3px dotted #cecece', borderRadius: '10px' }}>\n                                      <Box style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', paddingBlock: '10%', flexDirection: 'column' }}>\n\n                                        <UploadOutlined style={{ fontSize: '50px', color: 'gray' }} />\n                                        <Typography variant=\"h6\">Choose an image</Typography>\n                                  \n                                      </Box>\n                                    </Box>\n                                  </> :\n                                    <>\n                                      <Box onClick={handleButtonClick} style={{ marginInline: '2%', backgroundColor: '#f2f0f0', border: '3px dotted #cecece', borderRadius: '10px', display: 'flex', justifyContent: 'center', flexDirection: 'column' }}>\n                                      \n                                        {selectedImage &&\n                                          <Avatar src={selectedImage} alt=\"Selected\" style={{ width: 'auto', height: '200px', border: '1px solid lightGray', borderRadius: '10px' }} variant=\"square\" />\n                                        }\n                                        <AnimateButton>\n                                          <Button onClick={() => setSelectedImage('')} disableElevation variant=\"outlined\" size=\"medium\" style={{ color: 'rgb(76 91 104)', fontWeight: 700, backgroundColor: 'white', border: '1px solid lightGray', boxShadow: ' 0px 2px 30px -15px rgba(94,94,107,0.67)', marginBlock: '1%' }} color=\"secondary\">\n                                            Change Image\n                                          </Button>\n                                        </AnimateButton>\n                                      </Box>\n\n                                    </>}\n\n                                  <input\n                                    type=\"file\"\n                                    accept=\"image/*\"\n                                    style={{ display: 'none' }}\n                                    id=\"fileInput\"\n                                    onChange={handleFileUpload}\n                                    ref={fileInputRef}\n                                  />\n\n\n                                </Stack>\n                              </Grid>\n                            </Grid>\n                          </Grid>\n                        </Grid>\n                      </Grid>\n                     \n\n                   \n                      <Grid item xs={12} align=\"right\">\n\n                        <Button disabled={isSubmitting}\n                          startIcon={\n                            isSubmitting ?\n                              <ClipLoader\n                                color={\"#fff\"}\n                                loading={isSubmitting}\n                                size={20}\n                              />\n                              : null\n                          }\n                          type=\"submit\" disableElevation variant=\"contained\" size=\"medium\" style={{ fontWeight: 700, color: 'white', boxShadow: ' 0px 2px 30px -15px rgba(94,94,107,0.67)', marginInline: '2%' }} color=\"primary\">\n                          Save\n                        </Button>\n                        <Button\n                          disabled={isSubmitting}\n                          startIcon={\n                            isSubmitting ?\n                              <ClipLoader\n                                color={\"#fff\"}\n                                loading={isSubmitting}\n                                size={20}\n                              />\n                              : null\n                          }\n                          onClick={()=>{\n                            submitForm().then(() => {\n                              //  refresh page \n                              window.location.reload();\n                              // navigate('/new-route'); // replace '/new-route' with the path you want to navigate to\n                            });\n                          }} disableElevation variant=\"contained\" size=\"medium\" style={{ fontWeight: 700, color: 'white', boxShadow: ' 0px 2px 30px -15px rgba(94,94,107,0.67)' }} color=\"primary\">\n                          Save & Add More\n                        </Button>\n                       \n                      </Grid>\n                    </Grid>\n                  </form>\n                )}\n              </Formik>\n            </Grid>\n          </Grid>\n        </Grid>\n\n\n      </Grid>\n\n    </>\n  )\n};\n\nexport default CourseAdd;\n","// This icon file is generated automatically.\nvar PaperClipOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M779.3 196.6c-94.2-94.2-247.6-94.2-341.7 0l-261 260.8c-1.7 1.7-2.6 4-2.6 6.4s.9 4.7 2.6 6.4l36.9 36.9a9 9 0 0012.7 0l261-260.8c32.4-32.4 75.5-50.2 121.3-50.2s88.9 17.8 121.2 50.2c32.4 32.4 50.2 75.5 50.2 121.2 0 45.8-17.8 88.8-50.2 121.2l-266 265.9-43.1 43.1c-40.3 40.3-105.8 40.3-146.1 0-19.5-19.5-30.2-45.4-30.2-73s10.7-53.5 30.2-73l263.9-263.8c6.7-6.6 15.5-10.3 24.9-10.3h.1c9.4 0 18.1 3.7 24.7 10.3 6.7 6.7 10.3 15.5 10.3 24.9 0 9.3-3.7 18.1-10.3 24.7L372.4 653c-1.7 1.7-2.6 4-2.6 6.4s.9 4.7 2.6 6.4l36.9 36.9a9 9 0 0012.7 0l215.6-215.6c19.9-19.9 30.8-46.3 30.8-74.4s-11-54.6-30.8-74.4c-41.1-41.1-107.9-41-149 0L463 364 224.8 602.1A172.22 172.22 0 00174 724.8c0 46.3 18.1 89.8 50.8 122.5 33.9 33.8 78.3 50.7 122.7 50.7 44.4 0 88.8-16.9 122.6-50.7l309.2-309C824.8 492.7 850 432 850 367.5c.1-64.6-25.1-125.3-70.7-170.9z\" } }] }, \"name\": \"paper-clip\", \"theme\": \"outlined\" };\nexport default PaperClipOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PaperClipOutlinedSvg from \"@ant-design/icons-svg/es/asn/PaperClipOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar PaperClipOutlined = function PaperClipOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: PaperClipOutlinedSvg\n  }));\n};\nPaperClipOutlined.displayName = 'PaperClipOutlined';\nexport default /*#__PURE__*/React.forwardRef(PaperClipOutlined);"],"names":["fileInputRef","useRef","_useState","useState","_useState2","_slicedToArray","selectedImage","setSelectedImage","_useState3","_useState4","ImageFile","setImageFile","handleFileUpload","event","file","target","files","reader","FileReader","onload","result","readAsDataURL","handleButtonClick","current","click","navigate","useNavigate","_useState5","_useState6","selectedProgram","setSelectedProgram","fetchAllprograms","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","apiData","wrap","_context","prev","next","get","sent","console","log","error","program_id","t0","stop","apply","arguments","useEffect","_jsx","_Fragment","children","Grid","container","spacing","item","xs","md","style","position","_jsxs","display","flexDirection","justifyContent","marginBottom","Tooltip","title","Button","onClick","className","sx","paddingInline","color","backgroundColor","fontSize","fontWeight","borderRadius","textTransform","transition","transitionDelay","marginRight","ArrowLeftOutlined","Typography","variant","Formik","initialValues","name","description","stripe_payment_link","package_price","offer_price","total_students","submit","validationSchema","Yup","shape","required","onSubmit","_ref3","_callee2","values","_ref2","setErrors","setStatus","setSubmitting","_ImageUrl","ImageUrl","postDataImage","postData","_context2","resetForm","toastAlert","image","postFormData","path","package_name","type","package_offer_price","post","message","setTimeout","success","t1","_x","_x2","_ref4","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","submitForm","noValidate","border","padding","Stack","OutlinedInput","id","value","onBlur","onChange","fullWidth","Boolean","FormHelperText","multiline","rows","InputLabel","htmlFor","direction","disableElevation","window","open","startIcon","PaperClipOutlined","size","boxShadow","alignItems","Box","width","marginInline","paddingBlock","UploadOutlined","Avatar","src","alt","height","AnimateButton","marginBlock","accept","ref","align","disabled","ClipLoader","loading","then","location","reload","props","React","AntdIcon","_objectSpread","icon","PaperClipOutlinedSvg","displayName"],"sourceRoot":""}
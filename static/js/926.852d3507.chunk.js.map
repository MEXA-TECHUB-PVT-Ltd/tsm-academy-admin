{"version":3,"file":"static/js/926.852d3507.chunk.js","mappings":"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","sources":["components/cards/statistics/AnalyticEcommerce.js","pages/courses/OrdersTable.js","pages/courses/SamplePage.js"],"sourcesContent":["import PropTypes from 'prop-types';\n\n// material-ui\nimport { Box, Chip, Grid, Stack, Typography } from '@mui/material';\n\n// project import\nimport MainCard from 'components/MainCard';\n\n// assets\nimport { RiseOutlined, FallOutlined } from '@ant-design/icons';\n\n// ==============================|| STATISTICS - ECOMMERCE CARD  ||============================== //\n\nconst AnalyticEcommerce = ({ color, title, count, percentage, isLoss, extra }) => (\n  <MainCard contentSX={{ p: 2.25 }}>\n    <Stack spacing={0.5}>\n      <Typography variant=\"h6\" color=\"textSecondary\">\n        {title}\n      </Typography>\n      <Grid container alignItems=\"center\">\n        <Grid item>\n          <Typography variant=\"h4\" color=\"inherit\">\n            {count}\n          </Typography>\n        </Grid>\n        {percentage && (\n          <Grid item>\n            <Chip\n              variant=\"combined\"\n              color={color}\n             \n              label={`${percentage}%`}\n              sx={{ ml: 1.25, pl: 1 }}\n              size=\"small\"\n            />\n          </Grid>\n        )}\n      </Grid>\n    </Stack>\n    \n  </MainCard>\n);\n\nAnalyticEcommerce.propTypes = {\n  color: PropTypes.string,\n  title: PropTypes.string,\n  count: PropTypes.string,\n  percentage: PropTypes.number,\n  isLoss: PropTypes.bool,\n  extra: PropTypes.oneOfType([PropTypes.node, PropTypes.string])\n};\n\nAnalyticEcommerce.defaultProps = {\n  color: 'primary'\n};\n\nexport default AnalyticEcommerce;\n","import { useEffect, useRef, useState } from 'react';\n// material-ui\nimport {\n  Box, Menu, MenuItem,\n  Button,\n  Skeleton,\n  TablePagination,\n  Tooltip, Grid, Avatar, Table, TableBody, TableCell,\n  TableContainer, TableHead, TableRow, Typography\n} from '@mui/material';\n// project import\nimport emptyImage from \"../../assets/images/icons8-empty-64.png\"\nimport { BASE_URL, get } from 'Urls/api';\nimport {\n  EllipsisOutlined,\n  PlusOutlined\n} from '@ant-design/icons';\nimport { useNavigate } from 'react-router-dom';\nimport { formatDate } from 'utils/formatDate';\nimport AnimateButton from 'components/@extended/AnimateButton';\n\n\nexport default function OrderTable() {\n  const navigate = useNavigate();\n  const [products, setProducts] = useState([]);\n  // get all products \n\n  const anchorRef = useRef(null);\n  const [anchorEl, setAnchorEl] = useState(null);\n\n  const open = Boolean(anchorEl);\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n  const [selectedIndex, setSelectedIndex] = useState(0);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const [loader, setLoader] = useState(true)\n\n  // Use effect \n  const fetchAllproducts = async () => {\n    try {\n      const apiData = await get('package/getAllPackages'); // Specify the endpoint you want to call\n      console.log(\"ALL Courses\")\n      console.log(apiData)\n\n      if (apiData.error) {\n        setLoader(false)\n      } else {\n        setProducts(apiData.result)\n        setLoader(false)\n      }\n    } catch (error) {\n      setLoader(false)\n    }\n  }\n  useEffect(() => {\n    fetchAllproducts()\n  }, [page]);\n  return (\n    <Box>\n      {loader ? <>\n        <Grid container spacing={2} pt={10} >\n          {/* For variant=\"text\", adjust the height via font-size */}\n\n          <Grid item xs={12} md={12} >\n\n            <Skeleton variant=\"rectangular\" height={100} />\n\n          </Grid>\n          <Grid item xs={12} md={12} >\n\n            <Skeleton variant=\"rectangular\" height={100} />\n\n          </Grid>\n          <Grid item xs={12} md={12} >\n\n            <Skeleton variant=\"rectangular\" height={100} />\n\n          </Grid>\n\n        </Grid>\n      </> : <>\n        <Grid container spacing={2}>\n          <Grid item xs={12} md={12} align=\"right\">\n\n            <TableContainer\n              sx={{\n                width: '100%',\n                overflowX: 'auto',\n                position: 'relative',\n                display: 'block',\n                maxWidth: '100%',\n                '& td, & th': { whiteSpace: 'nowrap' }\n              }}\n            >\n              <Table\n                aria-labelledby=\"tableTitle\"\n                sx={{\n                  '& .MuiTableCell-root:first-of-type': {\n                    pl: 2\n                  },\n                  '& .MuiTableCell-root:last-of-type': {\n                    pr: 3\n                  }\n                }}\n              >\n                <TableHead>\n                  <TableRow>\n                    <TableCell align=\"left\">Name</TableCell>\n                    <TableCell align=\"center\">Description</TableCell>\n                    <TableCell align=\"center\">Created</TableCell>\n                    <TableCell align=\"center\">Updated</TableCell>\n                    <TableCell align=\"right\"></TableCell>\n                    <TableCell align=\"right\"></TableCell>\n\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {products.length === 0 ? <>\n                    <TableRow>\n                      <TableCell colSpan={6} align=\"center\">\n                        <Box style={{\n                          display: 'flex',\n                          justifyContent: 'center'\n                        }}>\n                          <Avatar variant=\"square\" src={emptyImage} alt=\"No Data\" style={{ width: '64px', height: 'auto', marginBlock: '2%' }} />\n                        </Box>\n                      </TableCell>\n\n                    </TableRow>\n                  </> :\n                    <>\n                      {products.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => (\n                        <>\n                          <TableRow\n                            key={row?.product_id}\n                            sx={{ '&:last-child td, &:last-child th': { border: 0 } }}\n                          >\n                            <TableCell component=\"th\" scope=\"row\" style={{ cursor: 'pointer' }} onClick={() => navigate(`/course_detail/${row.package_id}`)}>\n                              <Grid container spacing={2}>\n                                <Grid item xs={12} md={3}>\n                                  <Avatar variant=\"square\"\n                                    src={`${BASE_URL}${row?.image}`}\n                                    style={{\n                                      backgroundColor: '#03356b',\n                                      textTransform: 'capitalize'\n                                    }} />\n\n\n                                </Grid>\n                                <Grid item xs={12} md={9}>\n                                  <Typography variant=\"h5\" style={{ fontWeight: 200 }}>{row?.package_name}</Typography>\n                                  <Typography variant=\"h6\" style={{ fontWeight: 200, color: 'gray' }}> Price :{row.package_price} PKR</Typography>\n                                </Grid>\n                              </Grid>\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Typography\n                                style={{\n                                  whiteSpace: 'nowrap',\n                                  overflow: 'hidden',\n                                  textOverflow: 'ellipsis',\n                                  maxWidth: '300px',\n                                  cursor: 'pointer'\n                                }}\n                                title={row?.description.length > 20 ? row?.description : null} // Set a title for the full name\n                              >\n                                {row?.description}\n                              </Typography>\n\n                            </TableCell>\n\n\n                            <TableCell align=\"center\">{formatDate(row?.created_at)}</TableCell>\n                            <TableCell align=\"center\">{formatDate(row.updated_at)}</TableCell>\n                            <TableCell align=\"center\">\n                              <AnimateButton>\n                                <Button\n                                  onClick={() => navigate(`/videoAdd/${row.package_id}`)}\n                                  disableElevation startIcon={<PlusOutlined />} size=\"small\" color=\"primary\" variant=\"contained\">\n                                  Video\n                                </Button>\n                              </AnimateButton>\n                            </TableCell>\n                            <TableCell align=\"center\">\n                              <Tooltip title=\"Action\">\n                                <EllipsisOutlined ref={anchorRef} style={{ fontSize: '30px', cursor: 'pointer' }} onClick={\n                                  (event) => {\n                                    setSelectedIndex(row.package_id)\n                                    setAnchorEl(event.currentTarget);\n                                  }} />\n                              </Tooltip>\n                            </TableCell>\n                          </TableRow>\n\n\n                        </>\n                      ))}</>}\n                </TableBody>\n              </Table>\n            </TableContainer>\n          </Grid>\n          <Grid item xs={12} md={12} align=\"right\">\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25]}\n              component=\"div\"\n              count={products.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n\n          </Grid>\n        </Grid>\n        <Menu\n          id=\"basic-menu\"\n          anchorEl={anchorEl}\n          open={open}\n          onClose={handleClose}\n          MenuListProps={{\n            'aria-labelledby': 'basic-button',\n          }}\n          PaperProps={{\n            elevation: 0,\n            sx: {\n              overflow: 'visible',\n              boxShadow: '0px 2px 30px -15px rgba(94,94,107,0.67)',\n              mt: 1.5,\n\n            },\n          }}\n          transformOrigin={{ horizontal: 'right', vertical: 'top' }}\n          anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}\n        >\n          <MenuItem onClick={() => navigate(`/course_detail/${selectedIndex}`)}>View Course</MenuItem>\n          <MenuItem onClick={() => navigate(`/courseEdit/${selectedIndex}`)}>Edit Course</MenuItem>\n\n\n        </Menu>\n      </>}\n    </Box>\n  );\n}\n","// material-ui\nimport {\n  Typography, Grid, Button\n} from '@mui/material';\nimport { useEffect, useState } from 'react';\n// project import\nimport OrdersTable from './OrdersTable';\nimport AnimateButton from 'components/@extended/AnimateButton';\nimport {\n  PlusOutlined,\n} from '@ant-design/icons';\nimport { useNavigate } from 'react-router-dom';\nimport { post } from 'Urls/api';\nimport AnalyticEcommerce from 'components/cards/statistics/AnalyticEcommerce';\n\nconst Course = () => {\n  const navigate = useNavigate();\n  const [total_users, setTotal_Users] = useState(0)\n  const [total_subscriptions, setTotal_Subscriptions] = useState(0)\n  const [total_products, setTotal_Products] = useState(0)\n\n  const fetchAllproducts = async () => {\n    try {\n\n      const apiData = await post('user/dashboardAdminCount'); // Specify the endpoint you want to call\n      console.log(\"ALL Dashboard Count\")\n\n      console.log(apiData)\n\n      if (apiData.error) {\n      } else {\n        setTotal_Users(apiData.total_programs)\n        setTotal_Subscriptions(apiData.total_courses)\n        setTotal_Products(apiData.videos)\n\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n\n    }\n  }\n  useEffect(() => {\n    fetchAllproducts()\n  }, []);\n  return (\n    <>\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={9} style={{ display: 'flex', justifyContent: 'space-between' }}>\n          <Typography variant=\"h3\" style={{ fontWeight: 700 }}>Courses</Typography>\n\n        </Grid>\n        <Grid item xs={12} md={3} style={{ display: 'flex', justifyContent: 'right' }}>\n\n          <AnimateButton>\n            <Button\n              onClick={() => navigate('/courseAdd')}\n              disableElevation startIcon={<PlusOutlined />} size=\"medium\" color=\"primary\" variant=\"contained\">\n              Course\n            </Button>\n          </AnimateButton>\n        </Grid>\n        <Grid item xs={12} md={12}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6} md={4} lg={4}>\n              <AnalyticEcommerce title=\"Total Programs\" count={total_users} />\n            </Grid>\n            <Grid item xs={12} sm={6} md={4} lg={4}>\n              <AnalyticEcommerce title=\"Total Courses\" count={total_subscriptions} />\n            </Grid>\n            <Grid item xs={12} sm={6} md={4} lg={4}>\n              <AnalyticEcommerce title=\"Total Videos\" count={total_products} />\n            </Grid>\n\n          </Grid>\n          </Grid>\n\n        <Grid item xs={12} md={12}>\n          <OrdersTable />\n        </Grid>\n      \n      </Grid>\n\n    </>\n  )\n};\n\nexport default Course;\n"],"names":["AnalyticEcommerce","_ref","color","title","count","percentage","isLoss","extra","_jsx","MainCard","contentSX","p","children","_jsxs","Stack","spacing","Typography","variant","Grid","container","alignItems","item","Chip","label","concat","sx","ml","pl","size","defaultProps","OrderTable","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","products","setProducts","anchorRef","useRef","_useState3","_useState4","anchorEl","setAnchorEl","open","Boolean","_useState5","_useState6","selectedIndex","setSelectedIndex","_useState7","_useState8","page","setPage","_useState9","_useState10","rowsPerPage","setRowsPerPage","_useState11","_useState12","loader","setLoader","fetchAllproducts","_asyncToGenerator","_regeneratorRuntime","mark","_callee","apiData","wrap","_context","prev","next","get","sent","console","log","error","result","t0","stop","apply","arguments","useEffect","Box","_Fragment","pt","xs","md","Skeleton","height","align","TableContainer","width","overflowX","position","display","maxWidth","whiteSpace","Table","pr","TableHead","TableRow","TableCell","TableBody","length","colSpan","style","justifyContent","Avatar","src","emptyImage","alt","marginBlock","slice","map","row","border","component","scope","cursor","onClick","package_id","BASE_URL","image","backgroundColor","textTransform","fontWeight","package_name","package_price","overflow","textOverflow","description","formatDate","created_at","updated_at","AnimateButton","Button","disableElevation","startIcon","PlusOutlined","Tooltip","EllipsisOutlined","ref","fontSize","event","currentTarget","product_id","TablePagination","rowsPerPageOptions","onPageChange","newPage","onRowsPerPageChange","parseInt","target","value","Menu","id","onClose","MenuListProps","PaperProps","elevation","boxShadow","mt","transformOrigin","horizontal","vertical","anchorOrigin","MenuItem","total_users","setTotal_Users","total_subscriptions","setTotal_Subscriptions","total_products","setTotal_Products","post","total_programs","total_courses","videos","sm","lg","OrdersTable"],"sourceRoot":""}